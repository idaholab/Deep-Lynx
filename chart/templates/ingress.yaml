{{- if .Values.ingress.enabled -}}
{{- $fullName := include "deeplynx.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "deeplynx.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
{{/*  see docs at https://kubernetes.github.io/ingress-nginx/examples/rewrite/  */}}
  name: deeplynx-nginx-ingress
spec:
  ingressClassName: nginx
  rules:
    # can optionally supply a host as necessary, e.g. host: deeplynx.de.org
    # for environments that have DNS host records or after editing the local host file appropriately.
    # note that ingress rules cannot be made for receiving traffic on any ports besides
    # the defined HTTP and HTTPS ports (80 and 443 by default).
    # To receive and forward data on other ports, the ports must be:
    # 1) exposed by the cluster and mapped to a localhost port
    # 2) exposed as a port in nginx-values.yaml controller.containerPort
    # 3) added to the tcp map at the root level of nginx-values.yaml which in turn points to
    # 4) a service and port defined in service.yaml
    - http:
        paths:
          # this rule forwards all traffic received by the load balancer on the HTTP (80) port
          # to the DeepLynx service
          - path: /(.*)
            # ImplementationSpecific required for regex paths
            pathType: ImplementationSpecific
            backend:
              service:
                name: deeplynx-ingress
                port:
                  number: 8090
