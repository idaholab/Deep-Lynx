{
    "name": "deep-lynx",
    "version": "1.0.4",
    "description": "Deep Lynx allows for an integrated platform during design and operations of mega projects.",
    "main": "./dist/main.js",
    "author": "John Darrington and Christopher Ritter",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "git://github.com/idaholab/Deep-Lynx.git"
    },
    "scripts": {
        "docker:api:build": "docker build . -t core-api:latest",
        "docker:api:run": "docker run -it core-api:latest",
        "docker:api:clean": "docker stop $(docker ps -q --filter ancestor=core-api:latest) && docker rmi core-api:latest -f",
        "docker:postgres:build": "cd Dockerfiles/PostgreSQL && docker build . -t deep-lynx-postgres:latest",
        "docker:postgres:run": "docker run -p 5432:5432 -v %cd%/Dockerfiles/PostgreSQL/deeplynx.conf:/etc/postgresql/postgresql.conf -v %cd%/Dockerfiles/PostgreSQL/basedata:/private/var/lib/postgresql/data -e POSTGRES_PASSWORD=deeplynxcore -d -it deep-lynx-postgres:latest -c config_file=/etc/postgresql/postgresql.conf",
        "docker:timescale:run": "docker run -p 5432:5432 -v %cd%/Dockerfiles/PostgreSQL/deeplynx.conf:/etc/postgresql/postgresql.conf -v %cd%/Dockerfiles/PostgreSQL/basedata:/private/var/lib/postgresql/data -e POSTGRES_PASSWORD=deeplynxcore -d -it timescale/timescaledb-ha:pg13-latest",
        "mac:docker:timescale:run": "docker run -p 5432:5432 -v $(pwd)/Dockerfiles/PostgreSQL/deeplynx.conf:/etc/postgresql/postgresql.conf -v /private/var/lib/docker/basedata:/private/var/lib/postgresql/data -e POSTGRES_PASSWORD=deeplynxcore -d -it timescale/timescaledb-ha:pg13-latest",
        "mac:docker:postgres:run": "docker run -p 5432:5432 -v $(pwd)/Dockerfiles/PostgreSQL/deeplynx.conf:/etc/postgresql/postgresql.conf -v /private/var/lib/docker/basedata:/private/var/lib/postgresql/data  -e POSTGRES_PASSWORD=deeplynxcore -d -it deep-lynx-postgres:latest -c config_file=/etc/postgresql/postgresql.conf",
        "docker:postgres:clean": "docker stop $(docker ps -q --filter ancestor=deep-lynx-postgres:latest) && docker rmi deep-lynx-postgres:latest -f",
        "build": "tsc -p ./tsconfig.json && copyfiles -u 1 \"./src/**/*.hbs\" ./dist && copyfiles -u 1 \"src/http_server/assets/**\" ./dist && npm run build:web",
        "build:docker": "tsc -p ./tsconfig.json && copyfiles -u 1 \"./src/**/*.hbs\" ./dist && copyfiles -u 1 \"src/http_server/assets/**\" ./dist",
        "build:web": "copyfiles \"./.env\" ./AdminWebApp && cd ./AdminWebApp && npm install && npm run build -- --dest ./../dist/http_server/web_gui",
        "build:web-gl": "npm --prefix ./WebGLViewer install && npm --prefix ./WebGLViewer run build -- --base=/viewer/ --config=./vite.config.ts",
        "watch": "nodemon",
        "start": "tsc && copyfiles -u 1 \"./src/**/*.hbs\" ./dist && copyfiles -u 1 \"./src/http_server/assets/**\" ./dist && node -r dotenv/config ./dist/main.js",
        "start:docker": "node ./dist/main.js",
        "test": "cross-env TS_NODE_FILES=true npm run test:raw",
        "test:raw": " cd src/tests && cross-env-shell nyc mocha --exit -r ts-node/register -r dotenv/config --recursive \"**/*.spec.ts\" \"**/**/*.spec.ts\" \"**/**/**/*.spec.ts\" --prof --timeout 30000 ",
        "prepare": "husky install"
    },
    "devDependencies": {
        "@azure/storage-blob": "12.1.2",
        "@types/bcryptjs": "^2.4.2",
        "@types/chai": "^4.2.22",
        "@types/connect-pg-simple": "^4.2.2",
        "@types/core-js": "^2.5.5",
        "@types/express": "^4.17.11",
        "@types/express-session": "^1.17.3",
        "@types/faker": "^4.1.12",
        "@types/gremlin": "^3.5.0",
        "@types/helmet": "0.0.43",
        "@types/ioredis": "^4.27.4",
        "@types/jsonwebtoken": "^9.0.1",
        "@types/mocha": "^5.2.7",
        "@types/node": "^17.0.45",
        "@types/node-rsa": "^1.1.0",
        "@types/nodemailer": "^6.4.1",
        "@types/passport-http": "^0.3.9",
        "@types/passport-jwt": "^3.0.8",
        "@types/passport-local": "^1.0.35",
        "@types/pg": "^7.14.11",
        "@types/safe-timers": "^1.1.0",
        "@types/uuid": "^3.4.9",
        "@types/validator": "^13.7.0",
        "@types/xml2js": "^0.4.8",
        "@typescript-eslint/eslint-plugin": "^4.31.2",
        "@typescript-eslint/parser": "^4.31.2",
        "busboy": "^1.6.0",
        "casbin": "^5.11.5",
        "chai": "^4.3.4",
        "connect-pg-simple": "^7.0.0",
        "cross-env": "^5.2.1",
        "dotenv": "^8.2.0",
        "eslint": "^7.28.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-prefer-arrow": "^1.2.3",
        "eslint-plugin-security": "^1.5.0",
        "eslint-plugin-security-node": "^1.1.1",
        "express-session": "^1.17.1",
        "faker": "^4.1.0",
        "husky": "^6.0.0",
        "io-ts-types": "^0.5.15",
        "lint-staged": "^11.0.0",
        "mocha": "^9.1.3",
        "monocle-ts": "^2.3.11",
        "newtype-ts": "^0.3.4",
        "node-rsa": "^1.1.1",
        "nodemon": "^2.0.7",
        "nyc": "^15.1.0",
        "prettier": "2.3.1",
        "run-script-os": "^1.1.5",
        "ts-node": "^10.9.1",
        "tsconfig-paths": "^3.11.0",
        "typescript": "^4.7.2",
        "uuid": "^8.3.2",
        "winston": "^3.3.3"
    },
    "dependencies": {
        "@azure/service-bus": "^7.4.0",
        "@ladjs/graceful": "^1.0.5",
        "passport-saml": "^3.1.2",
        "@types/amqplib": "^0.8.2",
        "@types/busboy": "^1.5.0",
        "@types/dompurify": "^2.3.1",
        "@types/graphql-type-json": "^0.3.2",
        "@types/parquetjs": "^0.10.3",
        "@vue/cli-service": "~5.0.8",
        "amqplib": "^0.8.0",
        "axios": "^0.21.1",
        "base64url": "^3.0.1",
        "bcryptjs": "^2.4.3",
        "body-parser": "^1.19.0",
        "bree": "^9.1.2",
        "buffer": "^6.0.3",
        "build-url": "^6.0.1",
        "casbin-pg-adapter": "^1.4.0",
        "class-transformer": "^0.5.1",
        "class-transformer-validator": "^0.9.1",
        "class-validator": "^0.14.0",
        "copyfiles": "^2.4.1",
        "core-js": "^3.25.1",
        "cors": "^2.8.5",
        "csurf": "^1.11.0",
        "csv": "^5.5.3",
        "csvtojson": "^2.0.10",
        "date-fns": "^2.28.0",
        "dev-null": "^0.1.1",
        "digest-stream": "^2.0.0",
        "dl-fast-load": "file:NodeLibraries/dl-fast-load",
        "dot-prop": "^5.3.0",
        "express": "^4.17.1",
        "express-fileupload": "^1.2.1",
        "express-graphql": "^0.11.0",
        "express-handlebars": "^5.3.4",
        "express-validator": "^6.10.0",
        "express-winston": "^4.2.0",
        "fast-xml-parser": "^3.19.0",
        "flat": "^5.0.2",
        "fp-ts": "^2.11.3",
        "graphql": "^15.6.0",
        "graphql-tag": "^2.12.6",
        "graphql-type-json": "^0.3.2",
        "gremlin": "^3.4.10",
        "helmet": "^3.23.3",
        "highlight.js": "^10.6.0",
        "io-ts": "^2.2.16",
        "ioredis": "^4.24.2",
        "isomorphic-dompurify": "^0.15.0",
        "JSONStream": "^1.3.5",
        "jsonwebtoken": "^9.0.0",
        "kind-of": "^6.0.3",
        "method-override": "^3.0.0",
        "minimist": "^1.2.5",
        "node-cache": "^5.1.2",
        "nodemailer": "^6.6.5",
        "p-all": "^3.0.0",
        "p-limit": "^3.1.0",
        "p-map": "^4.0.0",
        "p-queue": "^6.6.2",
        "parquetjs": "^0.11.2",
        "passport": "^0.6.0",
        "passport-http": "^0.3.0",
        "passport-jwt": "^4.0.0",
        "passport-local": "^1.0.0",
        "pg": "^8.8.0",
        "pg-connection-string": "^2.5.0",
        "pg-format": "^1.0.4",
        "pg-large-object": "^2.0.0",
        "pg-query-stream": "^4.2.1",
        "reflect-metadata": "^0.1.13",
        "short-uuid": "^4.2.0",
        "tslib": "^2.3.0",
        "uid-generator": "^2.0.0",
        "uuid-random": "^1.3.2",
        "validator": "^13.5.2",
        "ws": "^8.9.0",
        "xml-2-json-streaming": "^0.1.2",
        "xml-crypto": "^2.1.1",
        "xml-js": "^1.6.11",
        "xml2js": "^0.4.23",
        "yargs-parser": "^20.2.7"
    },
    "lint-staged": {
        "*.js": "eslint --cache --fix",
        "*.{js,css,md}": "prettier --write"
    }
}
