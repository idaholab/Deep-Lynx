{
  "name": "deep-lynx",
  "version": "0.0.1",
  "description": "Deep Lynx allows for an integrated platform during design and operations of mega projects.",
  "main": "./dist/main.js",
  "author": "John Darrington and Christopher Ritter",
  "license": "MIT",
  "scripts": {
    "docker:api:build": "docker build . -t core-api:latest",
    "docker:api:run": "docker run -it core-api:latest",
    "docker:postgres:build": "cd Dockerfiles/PostgreSQL && docker build . -t deep-lynx-postgres:latest",
    "docker:postgres:run": "docker run -p 5432:5432 -v %cd%/Dockerfiles/PostgreSQL/deeplynx.conf:/etc/postgresql/postgresql.conf -v C:/Code/de-lynx/Dockerfiles/PostgreSQL/basedata:/private/var/lib/postgresql/data -e POSTGRES_PASSWORD=deeplynxcore -d -it deep-lynx-postgres:latest -c config_file=/etc/postgresql/postgresql.conf",
    "mac:docker:postgres:run": "docker run -p 5432:5432 -v $(pwd)/Dockerfiles/PostgreSQL/deeplynx.conf:/etc/postgresql/postgresql.conf -v /private/var/lib/docker/basedata:/private/var/lib/postgresql/data  -e POSTGRES_PASSWORD=deeplynxcore -d -it deep-lynx-postgres:latest -c config_file=/etc/postgresql/postgresql.conf",
    "docker:api:clean": "docker stop $(docker ps -q --filter ancestor=core-api:latest) && docker rmi core-api:latest -f",
    "docker:postgres:clean": "docker stop $(docker ps -q --filter ancestor=deep-lynx-postgres:latest) && docker rmi deep-lynx-postgres:latest -f",
    "docker:gremlin:run": "docker pull tinkerpop/gremlin-server:latest && docker run -d -p 8182:8182 tinkerpop/gremlin-server",
    "docker:gremlin:stop": "docker stop $(docker ps -q --filter ancestor=tinkerpop/gremlin-server)",
    "watch": "nodemon",
    "start": "tsc && node -r dotenv/config ./dist/main.js",
    "migrate": "tsc && node -r dotenv/config ./dist/migrate.js",
    "build:dev": "tsc",
    "test": "cross-env TS_NODE_FILES=true npm run test:raw",
    "test:raw": " cd src/test && cross-env-shell nyc mocha --exit  -r ts-node/register -r dotenv/config  **/*.spec.ts "
  },
  "devDependencies": {
    "@types/chai": "^4.2.11",
    "@types/express": "^4.17.6",
    "@types/faker": "^4.1.11",
    "@types/gremlin": "^3.4.6",
    "@types/helmet": "0.0.43",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.12.37",
    "@types/node-rsa": "^1.0.0",
    "@types/passport-saml": "^1.1.1",
    "@types/pg": "^7.14.3",
    "@types/uuid": "^3.4.9",
    "busboy": "^0.3.1",
    "casbin": "^4.5.0",
    "chai": "^4.2.0",
    "connect-pg-simple": "^6.1.0",
    "cross-env": "^5.2.1",
    "dotenv": "^8.2.0",
    "express-session": "^1.17.1",
    "faker": "^4.1.0",
    "io-ts-types": "^0.5.6",
    "mocha": "^7.1.2",
    "node-rsa": "^1.0.8",
    "nodemon": "^1.19.4",
    "nyc": "^15.0.1",
    "passport": "^0.4.1",
    "passport-http": "^0.3.0",
    "passport-saml": "^1.3.3",
    "pg": "^7.18.2",
    "run-script-os": "^1.1.1",
    "ts-node": "^8.9.1",
    "tsconfig-paths": "^3.9.0",
    "tslint": "^6.1.2",
    "typedoc": "^0.15.8",
    "typeorm-adapter": "^1.0.4",
    "typescript": "^3.8.3",
    "uuid": "^3.4.0",
    "winston": "^3.2.1"
  },
  "dependencies": {
    "@azure/storage-blob": "12.1.2",
    "@types/bcrypt": "^3.0.0",
    "@types/busboy": "^0.2.3",
    "@types/connect-pg-simple": "^4.2.0",
    "@types/express-session": "^1.17.0",
    "@types/mongodb": "^3.5.14",
    "@types/passport": "^1.0.3",
    "@types/passport-http": "^0.3.8",
    "@types/passport-jwt": "^3.0.3",
    "@types/passport-local": "^1.0.33",
    "axios": "^0.19.2",
    "bcrypt": "^5.0.0",
    "cors": "^2.8.5",
    "express": "^4.17.1",
    "express-fileupload": "^1.1.9",
    "express-validator": "^6.4.1",
    "fp-ts": "^2.5.4",
    "gremlin": "^3.4.6",
    "helmet": "^3.22.0",
    "io-ts": "^2.2.1",
    "jsonwebtoken": "^8.5.1",
    "mongodb": "^3.5.7",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pgtools": "^0.3.0",
    "uuid-random": "^1.3.0"
  }
}
