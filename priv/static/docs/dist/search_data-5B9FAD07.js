searchData={"items":[{"type":"module","title":"Datum","doc":"Datum keeps the contexts that define your domain\nand business logic.\n\nContexts are also responsible for managing your data, regardless\nif it comes from the database, an external API or others.","ref":"Datum.html"},{"type":"module","title":"Datum.Accounts","doc":"The Accounts context.","ref":"Datum.Accounts.html"},{"type":"function","title":"Datum.Accounts.apply_user_email/3","doc":"Emulates that the email will change without actually changing\nit in the database.","ref":"Datum.Accounts.html#apply_user_email/3"},{"type":"function","title":"Examples - Datum.Accounts.apply_user_email/3","doc":"iex> apply_user_email(user, \"valid password\", %{email: ...})\n    {:ok, %User{}}\n\n    iex> apply_user_email(user, \"invalid password\", %{email: ...})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Accounts.html#apply_user_email/3-examples"},{"type":"function","title":"Datum.Accounts.change_group/2","doc":"Returns an `%Ecto.Changeset{}` for tracking group changes.","ref":"Datum.Accounts.html#change_group/2"},{"type":"function","title":"Examples - Datum.Accounts.change_group/2","doc":"iex> change_group(group)\n    %Ecto.Changeset{data: %Group{}}","ref":"Datum.Accounts.html#change_group/2-examples"},{"type":"function","title":"Datum.Accounts.change_user_email/2","doc":"Returns an `%Ecto.Changeset{}` for changing the user email.","ref":"Datum.Accounts.html#change_user_email/2"},{"type":"function","title":"Examples - Datum.Accounts.change_user_email/2","doc":"iex> change_user_email(user)\n    %Ecto.Changeset{data: %User{}}","ref":"Datum.Accounts.html#change_user_email/2-examples"},{"type":"function","title":"Datum.Accounts.change_user_password/2","doc":"Returns an `%Ecto.Changeset{}` for changing the user password.","ref":"Datum.Accounts.html#change_user_password/2"},{"type":"function","title":"Examples - Datum.Accounts.change_user_password/2","doc":"iex> change_user_password(user)\n    %Ecto.Changeset{data: %User{}}","ref":"Datum.Accounts.html#change_user_password/2-examples"},{"type":"function","title":"Datum.Accounts.change_user_registration/2","doc":"Returns an `%Ecto.Changeset{}` for tracking user changes.","ref":"Datum.Accounts.html#change_user_registration/2"},{"type":"function","title":"Examples - Datum.Accounts.change_user_registration/2","doc":"iex> change_user_registration(user)\n    %Ecto.Changeset{data: %User{}}","ref":"Datum.Accounts.html#change_user_registration/2-examples"},{"type":"function","title":"Datum.Accounts.confirm_user/1","doc":"Confirms a user by the given token.\n\nIf the token matches, the user account is marked as confirmed\nand the token is deleted.","ref":"Datum.Accounts.html#confirm_user/1"},{"type":"function","title":"Datum.Accounts.create_group/1","doc":"Creates a group.","ref":"Datum.Accounts.html#create_group/1"},{"type":"function","title":"Examples - Datum.Accounts.create_group/1","doc":"iex> create_group(%{field: value})\n    {:ok, %Group{}}\n\n    iex> create_group(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Accounts.html#create_group/1-examples"},{"type":"function","title":"Datum.Accounts.delete_group/1","doc":"Deletes a group.","ref":"Datum.Accounts.html#delete_group/1"},{"type":"function","title":"Examples - Datum.Accounts.delete_group/1","doc":"iex> delete_group(group)\n    {:ok, %Group{}}\n\n    iex> delete_group(group)\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Accounts.html#delete_group/1-examples"},{"type":"function","title":"Datum.Accounts.delete_user_session_token/1","doc":"Deletes the signed token with the given context.","ref":"Datum.Accounts.html#delete_user_session_token/1"},{"type":"function","title":"Datum.Accounts.deliver_user_confirmation_instructions/2","doc":"Delivers the confirmation email instructions to the given user.","ref":"Datum.Accounts.html#deliver_user_confirmation_instructions/2"},{"type":"function","title":"Examples - Datum.Accounts.deliver_user_confirmation_instructions/2","doc":"iex> deliver_user_confirmation_instructions(user, &url(~p\"/users/confirm/#{&1}\"))\n    {:ok, %{to: ..., body: ...}}\n\n    iex> deliver_user_confirmation_instructions(confirmed_user, &url(~p\"/users/confirm/#{&1}\"))\n    {:error, :already_confirmed}","ref":"Datum.Accounts.html#deliver_user_confirmation_instructions/2-examples"},{"type":"function","title":"Datum.Accounts.deliver_user_reset_password_instructions/2","doc":"Delivers the reset password email to the given user.","ref":"Datum.Accounts.html#deliver_user_reset_password_instructions/2"},{"type":"function","title":"Examples - Datum.Accounts.deliver_user_reset_password_instructions/2","doc":"iex> deliver_user_reset_password_instructions(user, &url(~p\"/users/reset_password/#{&1}\"))\n    {:ok, %{to: ..., body: ...}}","ref":"Datum.Accounts.html#deliver_user_reset_password_instructions/2-examples"},{"type":"function","title":"Datum.Accounts.deliver_user_update_email_instructions/3","doc":"Delivers the update email instructions to the given user.","ref":"Datum.Accounts.html#deliver_user_update_email_instructions/3"},{"type":"function","title":"Examples - Datum.Accounts.deliver_user_update_email_instructions/3","doc":"iex> deliver_user_update_email_instructions(user, current_email, &url(~p\"/users/settings/confirm_email/#{&1}\"))\n    {:ok, %{to: ..., body: ...}}","ref":"Datum.Accounts.html#deliver_user_update_email_instructions/3-examples"},{"type":"function","title":"Datum.Accounts.generate_user_session_token/1","doc":"Generates a session token.","ref":"Datum.Accounts.html#generate_user_session_token/1"},{"type":"function","title":"Datum.Accounts.get_group!/1","doc":"Gets a single group.\n\nRaises `Ecto.NoResultsError` if the Group does not exist.","ref":"Datum.Accounts.html#get_group!/1"},{"type":"function","title":"Examples - Datum.Accounts.get_group!/1","doc":"iex> get_group!(123)\n    %Group{}\n\n    iex> get_group!(456)\n    ** (Ecto.NoResultsError)","ref":"Datum.Accounts.html#get_group!/1-examples"},{"type":"function","title":"Datum.Accounts.get_user!/1","doc":"Gets a single user.\n\nRaises `Ecto.NoResultsError` if the User does not exist.","ref":"Datum.Accounts.html#get_user!/1"},{"type":"function","title":"Examples - Datum.Accounts.get_user!/1","doc":"iex> get_user!(123)\n    %User{}\n\n    iex> get_user!(456)\n    ** (Ecto.NoResultsError)","ref":"Datum.Accounts.html#get_user!/1-examples"},{"type":"function","title":"Datum.Accounts.get_user_by_email/1","doc":"Gets a user by email.","ref":"Datum.Accounts.html#get_user_by_email/1"},{"type":"function","title":"Examples - Datum.Accounts.get_user_by_email/1","doc":"iex> get_user_by_email(\"foo@example.com\")\n    %User{}\n\n    iex> get_user_by_email(\"unknown@example.com\")\n    nil","ref":"Datum.Accounts.html#get_user_by_email/1-examples"},{"type":"function","title":"Datum.Accounts.get_user_by_email_and_password/2","doc":"Gets a user by email and password.","ref":"Datum.Accounts.html#get_user_by_email_and_password/2"},{"type":"function","title":"Examples - Datum.Accounts.get_user_by_email_and_password/2","doc":"iex> get_user_by_email_and_password(\"foo@example.com\", \"correct_password\")\n    %User{}\n\n    iex> get_user_by_email_and_password(\"foo@example.com\", \"invalid_password\")\n    nil","ref":"Datum.Accounts.html#get_user_by_email_and_password/2-examples"},{"type":"function","title":"Datum.Accounts.get_user_by_reset_password_token/1","doc":"Gets the user by reset password token.","ref":"Datum.Accounts.html#get_user_by_reset_password_token/1"},{"type":"function","title":"Examples - Datum.Accounts.get_user_by_reset_password_token/1","doc":"iex> get_user_by_reset_password_token(\"validtoken\")\n    %User{}\n\n    iex> get_user_by_reset_password_token(\"invalidtoken\")\n    nil","ref":"Datum.Accounts.html#get_user_by_reset_password_token/1-examples"},{"type":"function","title":"Datum.Accounts.get_user_by_session_token/1","doc":"Gets the user with the given signed token.","ref":"Datum.Accounts.html#get_user_by_session_token/1"},{"type":"function","title":"Datum.Accounts.insert_user/1","doc":"Used mainly by the CLI - input directly into the database without validation","ref":"Datum.Accounts.html#insert_user/1"},{"type":"function","title":"Datum.Accounts.list_groups/0","doc":"Returns the list of groups.","ref":"Datum.Accounts.html#list_groups/0"},{"type":"function","title":"Examples - Datum.Accounts.list_groups/0","doc":"iex> list_groups()\n    [%Group{}, ...]","ref":"Datum.Accounts.html#list_groups/0-examples"},{"type":"function","title":"Datum.Accounts.register_user/1","doc":"Registers a user.","ref":"Datum.Accounts.html#register_user/1"},{"type":"function","title":"Examples - Datum.Accounts.register_user/1","doc":"iex> register_user(%{field: value})\n    {:ok, %User{}}\n\n    iex> register_user(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Accounts.html#register_user/1-examples"},{"type":"function","title":"Datum.Accounts.reset_user_password/2","doc":"Resets the user password.","ref":"Datum.Accounts.html#reset_user_password/2"},{"type":"function","title":"Examples - Datum.Accounts.reset_user_password/2","doc":"iex> reset_user_password(user, %{password: \"new long password\", password_confirmation: \"new long password\"})\n    {:ok, %User{}}\n\n    iex> reset_user_password(user, %{password: \"valid\", password_confirmation: \"not the same\"})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Accounts.html#reset_user_password/2-examples"},{"type":"function","title":"Datum.Accounts.update_group/2","doc":"Updates a group.","ref":"Datum.Accounts.html#update_group/2"},{"type":"function","title":"Examples - Datum.Accounts.update_group/2","doc":"iex> update_group(group, %{field: new_value})\n    {:ok, %Group{}}\n\n    iex> update_group(group, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Accounts.html#update_group/2-examples"},{"type":"function","title":"Datum.Accounts.update_user_email/2","doc":"Updates the user email using the given token.\n\nIf the token matches, the user email is updated and the token is deleted.\nThe confirmed_at date is also updated to the current time.","ref":"Datum.Accounts.html#update_user_email/2"},{"type":"function","title":"Datum.Accounts.update_user_open_tabs/2","doc":"","ref":"Datum.Accounts.html#update_user_open_tabs/2"},{"type":"function","title":"Datum.Accounts.update_user_password/3","doc":"Updates the user password.","ref":"Datum.Accounts.html#update_user_password/3"},{"type":"function","title":"Examples - Datum.Accounts.update_user_password/3","doc":"iex> update_user_password(user, \"valid password\", %{password: ...})\n    {:ok, %User{}}\n\n    iex> update_user_password(user, \"invalid password\", %{password: ...})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Accounts.html#update_user_password/3-examples"},{"type":"module","title":"Datum.Accounts.Group","doc":"Groups are user or system defined groupings of users. Groups do\nnot inherently have any permissions in the system - they are only\nused to group users together when setting permissions in other systems.\nend","ref":"Datum.Accounts.Group.html"},{"type":"module","title":"Datum.Accounts.User","doc":"","ref":"Datum.Accounts.User.html"},{"type":"function","title":"Datum.Accounts.User.confirm_changeset/1","doc":"Confirms the account by setting `confirmed_at`.","ref":"Datum.Accounts.User.html#confirm_changeset/1"},{"type":"function","title":"Datum.Accounts.User.email_changeset/3","doc":"A user changeset for changing the email.\n\nIt requires the email to change otherwise an error is added.","ref":"Datum.Accounts.User.html#email_changeset/3"},{"type":"function","title":"Datum.Accounts.User.password_changeset/3","doc":"A user changeset for changing the password.","ref":"Datum.Accounts.User.html#password_changeset/3"},{"type":"function","title":"Options - Datum.Accounts.User.password_changeset/3","doc":"* `:hash_password` - Hashes the password so it can be stored securely\n    in the database and ensures the password field is cleared to prevent\n    leaks in the logs. If password hashing is not needed and clearing the\n    password field is not desired (like when using this changeset for\n    validations on a LiveView form), this option can be set to `false`.\n    Defaults to `true`.","ref":"Datum.Accounts.User.html#password_changeset/3-options"},{"type":"function","title":"Datum.Accounts.User.registration_changeset/3","doc":"A user changeset for registration.\n\nIt is important to validate the length of both email and password.\nOtherwise databases may truncate the email without warnings, which\ncould lead to unpredictable or insecure behaviour. Long passwords may\nalso be very expensive to hash for certain algorithms.","ref":"Datum.Accounts.User.html#registration_changeset/3"},{"type":"function","title":"Options - Datum.Accounts.User.registration_changeset/3","doc":"* `:hash_password` - Hashes the password so it can be stored securely\n    in the database and ensures the password field is cleared to prevent\n    leaks in the logs. If password hashing is not needed and clearing the\n    password field is not desired (like when using this changeset for\n    validations on a LiveView form), this option can be set to `false`.\n    Defaults to `true`.\n\n  * `:validate_email` - Validates the uniqueness of the email, in case\n    you don't want to validate the uniqueness of the email (like when\n    using this changeset for validations on a LiveView form before\n    submitting the form), this option can be set to `false`.\n    Defaults to `true`.","ref":"Datum.Accounts.User.html#registration_changeset/3-options"},{"type":"function","title":"Datum.Accounts.User.tabs_changeset/2","doc":"","ref":"Datum.Accounts.User.html#tabs_changeset/2"},{"type":"function","title":"Datum.Accounts.User.valid_password?/2","doc":"Verifies the password.\n\nIf there is no user or the user doesn't have a password, we call\n`Bcrypt.no_user_verify/0` to avoid timing attacks.","ref":"Datum.Accounts.User.html#valid_password?/2"},{"type":"function","title":"Datum.Accounts.User.validate_current_password/2","doc":"Validates the current password otherwise adds an error to the changeset.","ref":"Datum.Accounts.User.html#validate_current_password/2"},{"type":"module","title":"Datum.Accounts.UserGroup","doc":"User Groups are just the collection of membership for a particular group.\nAt time of creation, there are currently no plans to have roles inside the groups.\nend","ref":"Datum.Accounts.UserGroup.html"},{"type":"module","title":"Datum.Accounts.UserNotifier","doc":"","ref":"Datum.Accounts.UserNotifier.html"},{"type":"function","title":"Datum.Accounts.UserNotifier.deliver_confirmation_instructions/2","doc":"Deliver instructions to confirm account.","ref":"Datum.Accounts.UserNotifier.html#deliver_confirmation_instructions/2"},{"type":"function","title":"Datum.Accounts.UserNotifier.deliver_reset_password_instructions/2","doc":"Deliver instructions to reset a user password.","ref":"Datum.Accounts.UserNotifier.html#deliver_reset_password_instructions/2"},{"type":"function","title":"Datum.Accounts.UserNotifier.deliver_update_email_instructions/2","doc":"Deliver instructions to update a user email.","ref":"Datum.Accounts.UserNotifier.html#deliver_update_email_instructions/2"},{"type":"module","title":"Datum.Accounts.UserToken","doc":"","ref":"Datum.Accounts.UserToken.html"},{"type":"function","title":"Datum.Accounts.UserToken.build_email_token/2","doc":"Builds a token and its hash to be delivered to the user's email.\n\nThe non-hashed token is sent to the user email while the\nhashed part is stored in the database. The original token cannot be reconstructed,\nwhich means anyone with read-only access to the database cannot directly use\nthe token in the application to gain access. Furthermore, if the user changes\ntheir email in the system, the tokens sent to the previous email are no longer\nvalid.\n\nUsers can easily adapt the existing code to provide other types of delivery methods,\nfor example, by phone numbers.","ref":"Datum.Accounts.UserToken.html#build_email_token/2"},{"type":"function","title":"Datum.Accounts.UserToken.build_session_token/1","doc":"Generates a token that will be stored in a signed place,\nsuch as session or cookie. As they are signed, those\ntokens do not need to be hashed.\n\nThe reason why we store session tokens in the database, even\nthough Phoenix already provides a session cookie, is because\nPhoenix' default session cookies are not persisted, they are\nsimply signed and potentially encrypted. This means they are\nvalid indefinitely, unless you change the signing/encryption\nsalt.\n\nTherefore, storing them allows individual user\nsessions to be expired. The token system can also be extended\nto store additional data, such as the device used for logging in.\nYou could then use this information to display all valid sessions\nand devices in the UI and allow users to explicitly expire any\nsession they deem invalid.","ref":"Datum.Accounts.UserToken.html#build_session_token/1"},{"type":"function","title":"Datum.Accounts.UserToken.by_token_and_context_query/2","doc":"Returns the token struct for the given token value and context.","ref":"Datum.Accounts.UserToken.html#by_token_and_context_query/2"},{"type":"function","title":"Datum.Accounts.UserToken.by_user_and_contexts_query/2","doc":"Gets all tokens for the given user for the given contexts.","ref":"Datum.Accounts.UserToken.html#by_user_and_contexts_query/2"},{"type":"function","title":"Datum.Accounts.UserToken.verify_change_email_token_query/2","doc":"Checks if the token is valid and returns its underlying lookup query.\n\nThe query returns the user found by the token, if any.\n\nThis is used to validate requests to change the user\nemail. It is different from `verify_email_token_query/2` precisely because\n`verify_email_token_query/2` validates the email has not changed, which is\nthe starting point by this function.\n\nThe given token is valid if it matches its hashed counterpart in the\ndatabase and if it has not expired (after @change_email_validity_in_days).\nThe context must always start with \"change:\".","ref":"Datum.Accounts.UserToken.html#verify_change_email_token_query/2"},{"type":"function","title":"Datum.Accounts.UserToken.verify_email_token_query/2","doc":"Checks if the token is valid and returns its underlying lookup query.\n\nThe query returns the user found by the token, if any.\n\nThe given token is valid if it matches its hashed counterpart in the\ndatabase and the user email has not changed. This function also checks\nif the token is being used within a certain period, depending on the\ncontext. The default contexts supported by this function are either\n\"confirm\", for account confirmation emails, and \"reset_password\",\nfor resetting the password. For verifying requests to change the email,\nsee `verify_change_email_token_query/2`.","ref":"Datum.Accounts.UserToken.html#verify_email_token_query/2"},{"type":"function","title":"Datum.Accounts.UserToken.verify_session_token_query/1","doc":"Checks if the token is valid and returns its underlying lookup query.\n\nThe query returns the user found by the token, if any.\n\nThe token is valid if it matches the value in the database and it has\nnot expired (after @session_validity_in_days).","ref":"Datum.Accounts.UserToken.html#verify_session_token_query/1"},{"type":"module","title":"Datum.Agent","doc":"Agent is a GenServer (https://hexdocs.pm/elixir/GenServer.html) which is in charge of running the\nAI Assistant for Datum. Each instance of the GenServer is an individual agent, interacting with one\nsingle individual user.\n\nAlso, _all_ interacts with this genserver should be done asynchronously so that we avoid the application\nhanging while waiting for an agent's response, as those could be time consuming depending on hardware and\nload. The agent should require a parent pid on init, and then send replies back to that pid on messgages\nit generates.\n\nWe use Elixir LangChain normally, with the OpenAI agent - typically talking to an Ollama background.","ref":"Datum.Agent.html"},{"type":"function","title":"Datum.Agent.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Datum.Agent.html#child_spec/1"},{"type":"function","title":"Datum.Agent.combine_text/1","doc":"Reads all files in the specified directory,\ncombines their contents into one string, and returns it.","ref":"Datum.Agent.html#combine_text/1"},{"type":"function","title":"Datum.Agent.send_context/3","doc":"Send context will take a provided context as a map,  and then send it to the agent. This is useful for setting\nthings lke the current user, sending it data to be aware of etc.\n\nThis is an async task - replies should be listened to.","ref":"Datum.Agent.html#send_context/3"},{"type":"function","title":"Datum.Agent.send_message/3","doc":"Send message will take a user's provided text query, perform any formatting needed, and then send it to\nthe agent. This is an async task - replies should be listened to.","ref":"Datum.Agent.html#send_message/3"},{"type":"function","title":"Datum.Agent.start_link/1","doc":"","ref":"Datum.Agent.html#start_link/1"},{"type":"module","title":"Datum.Common","doc":"The Common context. Dealing with the models that don't fit nicely into other\ncontexts, such as the explorer tab context.","ref":"Datum.Common.html"},{"type":"function","title":"Datum.Common.change_explorer_tabs/2","doc":"Returns an `%Ecto.Changeset{}` for tracking explorer_tabs changes.","ref":"Datum.Common.html#change_explorer_tabs/2"},{"type":"function","title":"Examples - Datum.Common.change_explorer_tabs/2","doc":"iex> change_explorer_tabs(explorer_tabs)\n    %Ecto.Changeset{data: %ExplorerTabs{}}","ref":"Datum.Common.html#change_explorer_tabs/2-examples"},{"type":"function","title":"Datum.Common.create_explorer_tabs/1","doc":"Creates a explorer_tabs.","ref":"Datum.Common.html#create_explorer_tabs/1"},{"type":"function","title":"Examples - Datum.Common.create_explorer_tabs/1","doc":"iex> create_explorer_tabs(%{field: value})\n    {:ok, %ExplorerTabs{}}\n\n    iex> create_explorer_tabs(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Common.html#create_explorer_tabs/1-examples"},{"type":"function","title":"Datum.Common.create_explorer_tabs_for_user/2","doc":"","ref":"Datum.Common.html#create_explorer_tabs_for_user/2"},{"type":"function","title":"Datum.Common.delete_explorer_tabs/1","doc":"Deletes a explorer_tabs.","ref":"Datum.Common.html#delete_explorer_tabs/1"},{"type":"function","title":"Examples - Datum.Common.delete_explorer_tabs/1","doc":"iex> delete_explorer_tabs(explorer_tabs)\n    {:ok, %ExplorerTabs{}}\n\n    iex> delete_explorer_tabs(explorer_tabs)\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Common.html#delete_explorer_tabs/1-examples"},{"type":"function","title":"Datum.Common.explorer_tabs_for_user/1","doc":"","ref":"Datum.Common.html#explorer_tabs_for_user/1"},{"type":"function","title":"Datum.Common.get_explorer_tabs!/1","doc":"Gets a single explorer_tabs.\n\nRaises `Ecto.NoResultsError` if the Explorer tabs does not exist.","ref":"Datum.Common.html#get_explorer_tabs!/1"},{"type":"function","title":"Examples - Datum.Common.get_explorer_tabs!/1","doc":"iex> get_explorer_tabs!(123)\n    %ExplorerTabs{}\n\n    iex> get_explorer_tabs!(456)\n    ** (Ecto.NoResultsError)","ref":"Datum.Common.html#get_explorer_tabs!/1-examples"},{"type":"function","title":"Datum.Common.get_user_tab/2","doc":"","ref":"Datum.Common.html#get_user_tab/2"},{"type":"function","title":"Datum.Common.get_user_tab!/2","doc":"","ref":"Datum.Common.html#get_user_tab!/2"},{"type":"function","title":"Datum.Common.list_explorer_tabs/0","doc":"Returns the list of explorer_tabs.","ref":"Datum.Common.html#list_explorer_tabs/0"},{"type":"function","title":"Examples - Datum.Common.list_explorer_tabs/0","doc":"iex> list_explorer_tabs()\n    [%ExplorerTabs{}, ...]","ref":"Datum.Common.html#list_explorer_tabs/0-examples"},{"type":"function","title":"Datum.Common.list_open_tabs/2","doc":"","ref":"Datum.Common.html#list_open_tabs/2"},{"type":"function","title":"Datum.Common.update_explorer_tabs/2","doc":"Updates a explorer_tabs.","ref":"Datum.Common.html#update_explorer_tabs/2"},{"type":"function","title":"Examples - Datum.Common.update_explorer_tabs/2","doc":"iex> update_explorer_tabs(explorer_tabs, %{field: new_value})\n    {:ok, %ExplorerTabs{}}\n\n    iex> update_explorer_tabs(explorer_tabs, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Common.html#update_explorer_tabs/2-examples"},{"type":"module","title":"Datum.Common.ExplorerTabs","doc":"ExplorerTabs are the representation of an open viewing tab in the data explorer home.\nThis system allows us to easily save and restore a user's workspaces without having to use\njavascript or local storage garbage. Sqlite is more than fast enough, especially with LiveView\nto handle restore/close options.","ref":"Datum.Common.ExplorerTabs.html"},{"type":"module","title":"Datum.DataOrigin","doc":"The DataOrigin context. See data_origin/Origin.ex for information on what a DataOrigin is\nand how it slots into the bigger picture of Datum.","ref":"Datum.DataOrigin.html"},{"type":"function","title":"Datum.DataOrigin.add_data/3","doc":"","ref":"Datum.DataOrigin.html#add_data/3"},{"type":"function","title":"Datum.DataOrigin.add_data!/3","doc":"","ref":"Datum.DataOrigin.html#add_data!/3"},{"type":"function","title":"Datum.DataOrigin.add_relationship/3","doc":"","ref":"Datum.DataOrigin.html#add_relationship/3"},{"type":"function","title":"Datum.DataOrigin.change_extracted_metadata/2","doc":"Returns an `%Ecto.Changeset{}` for tracking extracted_metadata changes.","ref":"Datum.DataOrigin.html#change_extracted_metadata/2"},{"type":"function","title":"Examples - Datum.DataOrigin.change_extracted_metadata/2","doc":"iex> change_extracted_metadata(extracted_metadata)\n    %Ecto.Changeset{data: %ExtractedMetadata{}}","ref":"Datum.DataOrigin.html#change_extracted_metadata/2-examples"},{"type":"function","title":"Datum.DataOrigin.change_origin/2","doc":"Returns an `%Ecto.Changeset{}` for tracking origin changes.","ref":"Datum.DataOrigin.html#change_origin/2"},{"type":"function","title":"Examples - Datum.DataOrigin.change_origin/2","doc":"iex> change_origin(origin)\n    %Ecto.Changeset{data: %Origin{}}","ref":"Datum.DataOrigin.html#change_origin/2-examples"},{"type":"function","title":"Datum.DataOrigin.connect_data/3","doc":"","ref":"Datum.DataOrigin.html#connect_data/3"},{"type":"function","title":"Datum.DataOrigin.create_extracted_metadata/1","doc":"Creates a extracted_metadata.","ref":"Datum.DataOrigin.html#create_extracted_metadata/1"},{"type":"function","title":"Examples - Datum.DataOrigin.create_extracted_metadata/1","doc":"iex> create_extracted_metadata(%{field: value})\n    {:ok, %ExtractedMetadata{}}\n\n    iex> create_extracted_metadata(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.DataOrigin.html#create_extracted_metadata/1-examples"},{"type":"function","title":"Datum.DataOrigin.create_origin/1","doc":"Creates a origin.","ref":"Datum.DataOrigin.html#create_origin/1"},{"type":"function","title":"Examples - Datum.DataOrigin.create_origin/1","doc":"iex> create_origin(%{field: value})\n    {:ok, %Origin{}}\n\n    iex> create_origin(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.DataOrigin.html#create_origin/1-examples"},{"type":"function","title":"Datum.DataOrigin.delete_data/2","doc":"","ref":"Datum.DataOrigin.html#delete_data/2"},{"type":"function","title":"Datum.DataOrigin.delete_extracted_metadata/1","doc":"Deletes a extracted_metadata.","ref":"Datum.DataOrigin.html#delete_extracted_metadata/1"},{"type":"function","title":"Examples - Datum.DataOrigin.delete_extracted_metadata/1","doc":"iex> delete_extracted_metadata(extracted_metadata)\n    {:ok, %ExtractedMetadata{}}\n\n    iex> delete_extracted_metadata(extracted_metadata)\n    {:error, %Ecto.Changeset{}}","ref":"Datum.DataOrigin.html#delete_extracted_metadata/1-examples"},{"type":"function","title":"Datum.DataOrigin.delete_origin/1","doc":"Deletes a origin.","ref":"Datum.DataOrigin.html#delete_origin/1"},{"type":"function","title":"Examples - Datum.DataOrigin.delete_origin/1","doc":"iex> delete_origin(origin)\n    {:ok, %Origin{}}\n\n    iex> delete_origin(origin)\n    {:error, %Ecto.Changeset{}}","ref":"Datum.DataOrigin.html#delete_origin/1-examples"},{"type":"function","title":"Datum.DataOrigin.get_data!/2","doc":"","ref":"Datum.DataOrigin.html#get_data!/2"},{"type":"function","title":"Datum.DataOrigin.get_data_by_path!/2","doc":"","ref":"Datum.DataOrigin.html#get_data_by_path!/2"},{"type":"function","title":"Datum.DataOrigin.get_data_orgins_user/3","doc":"","ref":"Datum.DataOrigin.html#get_data_orgins_user/3"},{"type":"function","title":"Datum.DataOrigin.get_data_user/4","doc":"","ref":"Datum.DataOrigin.html#get_data_user/4"},{"type":"function","title":"Datum.DataOrigin.get_extracted_metadata!/1","doc":"Gets a single extracted_metadata.\n\nRaises `Ecto.NoResultsError` if the Extracted metadata does not exist.","ref":"Datum.DataOrigin.html#get_extracted_metadata!/1"},{"type":"function","title":"Examples - Datum.DataOrigin.get_extracted_metadata!/1","doc":"iex> get_extracted_metadata!(123)\n    %ExtractedMetadata{}\n\n    iex> get_extracted_metadata!(456)\n    ** (Ecto.NoResultsError)","ref":"Datum.DataOrigin.html#get_extracted_metadata!/1-examples"},{"type":"function","title":"Datum.DataOrigin.get_origin!/1","doc":"Gets a single origin.\n\nRaises `Ecto.NoResultsError` if the Origin does not exist.","ref":"Datum.DataOrigin.html#get_origin!/1"},{"type":"function","title":"Examples - Datum.DataOrigin.get_origin!/1","doc":"iex> get_origin!(123)\n    %Origin{}\n\n    iex> get_origin!(456)\n    ** (Ecto.NoResultsError)","ref":"Datum.DataOrigin.html#get_origin!/1-examples"},{"type":"function","title":"Datum.DataOrigin.list_data_descendants/2","doc":"","ref":"Datum.DataOrigin.html#list_data_descendants/2"},{"type":"function","title":"Datum.DataOrigin.list_data_descendants_user/4","doc":"","ref":"Datum.DataOrigin.html#list_data_descendants_user/4"},{"type":"function","title":"Datum.DataOrigin.list_data_orgins_user/3","doc":"Returns a list of data_origins for a user - taking into account\ntheir groups and permissions for said origins.","ref":"Datum.DataOrigin.html#list_data_orgins_user/3"},{"type":"function","title":"Datum.DataOrigin.list_data_origins/0","doc":"Returns the list of data_origins.","ref":"Datum.DataOrigin.html#list_data_origins/0"},{"type":"function","title":"Examples - Datum.DataOrigin.list_data_origins/0","doc":"iex> list_data_origins()\n    [%Origin{}, ...]","ref":"Datum.DataOrigin.html#list_data_origins/0-examples"},{"type":"function","title":"Datum.DataOrigin.list_data_user/3","doc":"","ref":"Datum.DataOrigin.html#list_data_user/3"},{"type":"function","title":"Datum.DataOrigin.list_extracted_metadatas/0","doc":"Returns the list of extracted_metadatas.","ref":"Datum.DataOrigin.html#list_extracted_metadatas/0"},{"type":"function","title":"Examples - Datum.DataOrigin.list_extracted_metadatas/0","doc":"iex> list_extracted_metadatas()\n    [%ExtractedMetadata{}, ...]","ref":"Datum.DataOrigin.html#list_extracted_metadatas/0-examples"},{"type":"function","title":"Datum.DataOrigin.list_roots/1","doc":"","ref":"Datum.DataOrigin.html#list_roots/1"},{"type":"function","title":"Datum.DataOrigin.query_origin_sync/3","doc":"This allows users to run queries on the data origin itself if they support it - such as\nrunning SQL queries on DuckDB backed origins, or exposed commands on the file system.\n\n\nNote - this only functions if the origin is a supported type _and_ its config field is not\nnil, indicating that it's a data backed origin we have connection info on","ref":"Datum.DataOrigin.html#query_origin_sync/3"},{"type":"function","title":"Datum.DataOrigin.search_origin/4","doc":"","ref":"Datum.DataOrigin.html#search_origin/4"},{"type":"function","title":"Datum.DataOrigin.update_extracted_metadata/2","doc":"Updates a extracted_metadata.","ref":"Datum.DataOrigin.html#update_extracted_metadata/2"},{"type":"function","title":"Examples - Datum.DataOrigin.update_extracted_metadata/2","doc":"iex> update_extracted_metadata(extracted_metadata, %{field: new_value})\n    {:ok, %ExtractedMetadata{}}\n\n    iex> update_extracted_metadata(extracted_metadata, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.DataOrigin.html#update_extracted_metadata/2-examples"},{"type":"function","title":"Datum.DataOrigin.update_origin/2","doc":"Updates a origin.","ref":"Datum.DataOrigin.html#update_origin/2"},{"type":"function","title":"Examples - Datum.DataOrigin.update_origin/2","doc":"iex> update_origin(origin, %{field: new_value})\n    {:ok, %Origin{}}\n\n    iex> update_origin(origin, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.DataOrigin.html#update_origin/2-examples"},{"type":"module","title":"Datum.DataOrigin.CT","doc":"Needed for the closure_table library. NOTE: You MUST call this only after you've done put_dynamic_repo, either\nyourself or through the function above. If not, you're potentially writing a previous connection's database. I know,\nit's potentially dangerous - but so is breathing.","ref":"Datum.DataOrigin.CT.html"},{"type":"function","title":"Datum.DataOrigin.CT.ancestors/2","doc":"","ref":"Datum.DataOrigin.CT.html#ancestors/2"},{"type":"function","title":"Datum.DataOrigin.CT.delete/2","doc":"when limit: 1, the default value, then delete only the leafs, else the entire subtree","ref":"Datum.DataOrigin.CT.html#delete/2"},{"type":"function","title":"Datum.DataOrigin.CT.descendants/2","doc":"","ref":"Datum.DataOrigin.CT.html#descendants/2"},{"type":"function","title":"Datum.DataOrigin.CT.insert/3","doc":"","ref":"Datum.DataOrigin.CT.html#insert/3"},{"type":"function","title":"Datum.DataOrigin.CT.move/3","doc":"","ref":"Datum.DataOrigin.CT.html#move/3"},{"type":"function","title":"Datum.DataOrigin.CT.tree/2","doc":"","ref":"Datum.DataOrigin.CT.html#tree/2"},{"type":"module","title":"Datum.DataOrigin.Data","doc":"Data is the actual stored data for an origin, typically represents a file or directory,\nbut more types are supported and will be supported as time continues.","ref":"Datum.DataOrigin.Data.html"},{"type":"module","title":"Datum.DataOrigin.DataHistory","doc":"This structure is populated automatically in the database when data is inserted. Keeping the schema\nseparate allows us to know when we're working with historical data.","ref":"Datum.DataOrigin.DataHistory.html"},{"type":"module","title":"Datum.DataOrigin.DataSearch","doc":"Reflects the virtual table for FTS5 searching.","ref":"Datum.DataOrigin.DataSearch.html"},{"type":"module","title":"Datum.DataOrigin.DataTreePath","doc":"DataTreePath is for use with the closure_tables library. It's needed to hold\nthe relationship information for us modeling a filesystem","ref":"Datum.DataOrigin.DataTreePath.html"},{"type":"module","title":"Datum.DataOrigin.Documentation","doc":"Documenation for a piece of data. It's stored in a separate table vs.\nembedded schema so that we can do things like semantic search on it since\nthere will often be more than one piece of documentation.","ref":"Datum.DataOrigin.Documentation.html"},{"type":"module","title":"Datum.DataOrigin.ExtractedMetadata","doc":"Playing around with this currently - we're thinking that we need the extracted metadata to be\ndecomposed or normalized into the database structure so that we can do semantic search either via\nFTS5 or vector search. Definitely a work in progress structure.","ref":"Datum.DataOrigin.ExtractedMetadata.html"},{"type":"module","title":"Datum.DataOrigin.Origin","doc":"Represents a point of origin for data. Typically we view these as file systems, network drives,\nHPC clusters etc. It's a logical, hierarchical separation of data that is representive of a filesystem.\nOrigins should contain a lot of data - but if they start to grow too large we'll need to look at separating them\nor figuring how to handle splitting the underlying Sqlite3 database. That's right - each Origin has it's OWN Sqlite3\ndatabased stored at the configured filesystem point.\n\nSeparate databases allow us to search them concurrently, handle need to know and permissions across a better security surface (can't\nbreak out of a table if you're not even in the database) and to handle differing encryption and classification needs for the origins.\nThe endgoal here is that these origin's might be running on different servers, or even typically available in other networks, but attached\nto an operational database.\n\nNote: while currently not the case, it is hypothesized that an Origin _could_ eventually belong to more than one instance of the main\nDatum server.","ref":"Datum.DataOrigin.Origin.html"},{"type":"module","title":"Datum.DataOrigin.Origin.AzureConfig","doc":"Azure Blob Configuration for Data Origins","ref":"Datum.DataOrigin.Origin.AzureConfig.html"},{"type":"module","title":"Datum.DataOrigin.Origin.DuckDBConfig","doc":"DuckDB Configuration for Data Origins","ref":"Datum.DataOrigin.Origin.DuckDBConfig.html"},{"type":"module","title":"Datum.DataOrigin.Origin.FilesystemConfig","doc":"Filesystem configuration - not necessarily needed if the filesystem is local, but\nif it's a networked location - we need the information to make connections.\nNote: that we can't actually easily make that connection from within Erlang itself.","ref":"Datum.DataOrigin.Origin.FilesystemConfig.html"},{"type":"module","title":"Datum.DataOrigin.Origin.R2Config","doc":"R2 Configuration for Data Origins","ref":"Datum.DataOrigin.Origin.R2Config.html"},{"type":"module","title":"Datum.DataOrigin.Origin.S3Config","doc":"S3 Configuration for Data Origins","ref":"Datum.DataOrigin.Origin.S3Config.html"},{"type":"module","title":"Datum.DataOrigin.OriginRepo","doc":"This is the repo for interacting with DataOrigin's Sqlite3 databases.\n  Each Data Origin will have it's own, separate Sqlite3 database and so\n  we will use dynamic repositories to work with it.","ref":"Datum.DataOrigin.OriginRepo.html"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.aggregate/3","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#aggregate/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.aggregate/4","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#aggregate/4"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.all/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#all/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.checked_out?/0","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#checked_out?/0"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.checkout/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#checkout/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.child_spec/1","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#child_spec/1"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.config/0","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#config/0"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.default_options/1","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#default_options/1"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.delete/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#delete/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.delete!/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#delete!/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.delete_all/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#delete_all/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.disconnect_all/2","doc":"A convenience function for SQL-based repositories that forces all connections in the\npool to disconnect within the given interval.\n\nSee `Ecto.Adapters.SQL.disconnect_all/3` for more information.","ref":"Datum.DataOrigin.OriginRepo.html#disconnect_all/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.exists?/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#exists?/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.explain/3","doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar\ndepending on the adapter to obtain statistics for the given query.\n\nSee `Ecto.Adapters.SQL.explain/4` for more information.","ref":"Datum.DataOrigin.OriginRepo.html#explain/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.get/3","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#get/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.get!/3","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#get!/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.get_by/3","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#get_by/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.get_by!/3","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#get_by!/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.get_dynamic_repo/0","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#get_dynamic_repo/0"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.in_transaction?/0","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#in_transaction?/0"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.insert/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#insert/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.insert!/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#insert!/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.insert_all/3","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#insert_all/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.insert_or_update/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#insert_or_update/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.insert_or_update!/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#insert_or_update!/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.load/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#load/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.one/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#one/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.one!/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#one!/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.preload/3","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#preload/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.prepare_query/3","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#prepare_query/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.put_dynamic_repo/1","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#put_dynamic_repo/1"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.query/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query/4` for more information.","ref":"Datum.DataOrigin.OriginRepo.html#query/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.query!/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query!/4` for more information.","ref":"Datum.DataOrigin.OriginRepo.html#query!/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.query_many/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many/4` for more information.","ref":"Datum.DataOrigin.OriginRepo.html#query_many/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.query_many!/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many!/4` for more information.","ref":"Datum.DataOrigin.OriginRepo.html#query_many!/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.reload/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#reload/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.reload!/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#reload!/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.rollback/1","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#rollback/1"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.start_link/1","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#start_link/1"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.stop/1","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#stop/1"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.stream/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#stream/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.to_sql/2","doc":"A convenience function for SQL-based repositories that translates the given query to SQL.\n\nSee `Ecto.Adapters.SQL.to_sql/3` for more information.","ref":"Datum.DataOrigin.OriginRepo.html#to_sql/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.transaction/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#transaction/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.update/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#update/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.update!/2","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#update!/2"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.update_all/3","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#update_all/3"},{"type":"function","title":"Datum.DataOrigin.OriginRepo.with_dynamic_repo/3","doc":"","ref":"Datum.DataOrigin.OriginRepo.html#with_dynamic_repo/3"},{"type":"module","title":"Datum.Duckdb","doc":"DuckDB is a GenServer (https://hexdocs.pm/elixir/GenServer.html) which is in charge of running any queries on\nCSV and Parquet files currently. Each instance of this GenServer is an individual DB, interacting with a single\nuser through a LiveView.\n\nAlso, _all_ interactions with this genserver should be done asynchronously so that we avoid the application\nhanging while waiting for a db's response, as those could be time consuming depending on hardware and\nload. The db should require a parent pid on init, and then send replies back to that pid on messgages\nit generates.\n\nBecause messages copy all data back and forth, the initial workup of this genserver will send results back\nas a message BUT we will need to find a better way to handle results - such as uploading those results\nto the origin alongside the files.","ref":"Datum.Duckdb.html"},{"type":"function","title":"Datum.Duckdb.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Datum.Duckdb.html#child_spec/1"},{"type":"function","title":"Datum.Duckdb.query/3","doc":"Send query will take a user's provided text query and then send it to\nthe database connection. This is an async task - replies should be listened for.\nProvide a reference so that you know what reply a message is for","ref":"Datum.Duckdb.html#query/3"},{"type":"function","title":"Datum.Duckdb.query_sync/2","doc":"","ref":"Datum.Duckdb.html#query_sync/2"},{"type":"function","title":"Datum.Duckdb.start_link/2","doc":"","ref":"Datum.Duckdb.html#start_link/2"},{"type":"module","title":"Datum.Mailer","doc":"","ref":"Datum.Mailer.html"},{"type":"function","title":"Datum.Mailer.deliver/2","doc":"","ref":"Datum.Mailer.html#deliver/2"},{"type":"function","title":"Datum.Mailer.deliver!/2","doc":"","ref":"Datum.Mailer.html#deliver!/2"},{"type":"function","title":"Datum.Mailer.deliver_many/2","doc":"","ref":"Datum.Mailer.html#deliver_many/2"},{"type":"module","title":"Datum.ModuleName","doc":"This is how we store and restore Elixir module names in our\n  application. Typically used for our explorer window panes or plugin names.\n  This type is used by Ecto to safely store and restore Strings to Atoms.","ref":"Datum.ModuleName.html"},{"type":"function","title":"Datum.ModuleName.cast/1","doc":"","ref":"Datum.ModuleName.html#cast/1"},{"type":"function","title":"Datum.ModuleName.dump/1","doc":"","ref":"Datum.ModuleName.html#dump/1"},{"type":"function","title":"Datum.ModuleName.embed_as/1","doc":"","ref":"Datum.ModuleName.html#embed_as/1"},{"type":"function","title":"Datum.ModuleName.equal?/2","doc":"","ref":"Datum.ModuleName.html#equal?/2"},{"type":"function","title":"Datum.ModuleName.load/1","doc":"","ref":"Datum.ModuleName.html#load/1"},{"type":"function","title":"Datum.ModuleName.type/0","doc":"","ref":"Datum.ModuleName.html#type/0"},{"type":"module","title":"Datum.Permissions","doc":"The Permissions context. See the permissions folder for information.","ref":"Datum.Permissions.html"},{"type":"function","title":"Datum.Permissions.change_data_origin/2","doc":"Returns an `%Ecto.Changeset{}` for tracking data_origin changes.","ref":"Datum.Permissions.html#change_data_origin/2"},{"type":"function","title":"Examples - Datum.Permissions.change_data_origin/2","doc":"iex> change_data_origin(data_origin)\n    %Ecto.Changeset{data: %DataOrigin{}}","ref":"Datum.Permissions.html#change_data_origin/2-examples"},{"type":"function","title":"Datum.Permissions.create_data_origin/1","doc":"Creates a data_origin.","ref":"Datum.Permissions.html#create_data_origin/1"},{"type":"function","title":"Examples - Datum.Permissions.create_data_origin/1","doc":"iex> create_data_origin(%{field: value})\n    {:ok, %DataOrigin{}}\n\n    iex> create_data_origin(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Permissions.html#create_data_origin/1-examples"},{"type":"function","title":"Datum.Permissions.delete_data_origin/1","doc":"Deletes a data_origin.","ref":"Datum.Permissions.html#delete_data_origin/1"},{"type":"function","title":"Examples - Datum.Permissions.delete_data_origin/1","doc":"iex> delete_data_origin(data_origin)\n    {:ok, %DataOrigin{}}\n\n    iex> delete_data_origin(data_origin)\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Permissions.html#delete_data_origin/1-examples"},{"type":"function","title":"Datum.Permissions.get_data_origin!/1","doc":"Gets a single data_origin.\n\nRaises `Ecto.NoResultsError` if the Data origin does not exist.","ref":"Datum.Permissions.html#get_data_origin!/1"},{"type":"function","title":"Examples - Datum.Permissions.get_data_origin!/1","doc":"iex> get_data_origin!(123)\n    %DataOrigin{}\n\n    iex> get_data_origin!(456)\n    ** (Ecto.NoResultsError)","ref":"Datum.Permissions.html#get_data_origin!/1-examples"},{"type":"function","title":"Datum.Permissions.list_permissions_data_origin/0","doc":"Returns the list of permissions_data_origin.","ref":"Datum.Permissions.html#list_permissions_data_origin/0"},{"type":"function","title":"Examples - Datum.Permissions.list_permissions_data_origin/0","doc":"iex> list_permissions_data_origin()\n    [%DataOrigin{}, ...]","ref":"Datum.Permissions.html#list_permissions_data_origin/0-examples"},{"type":"function","title":"Datum.Permissions.update_data_origin/2","doc":"Updates a data_origin.","ref":"Datum.Permissions.html#update_data_origin/2"},{"type":"function","title":"Examples - Datum.Permissions.update_data_origin/2","doc":"iex> update_data_origin(data_origin, %{field: new_value})\n    {:ok, %DataOrigin{}}\n\n    iex> update_data_origin(data_origin, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Permissions.html#update_data_origin/2-examples"},{"type":"module","title":"Datum.Permissions.Data","doc":"Permissions table for Data in a DataOrigin- reference this table whenever you're loading\ndata. Try to do so as part of the query itself, not a separate call.","ref":"Datum.Permissions.Data.html"},{"type":"module","title":"Datum.Permissions.DataOrigin","doc":"Permissions table for DataOrigins - reference this table whenever you're loading\norigins. Try to do so as part of the query itself, not a separate call.","ref":"Datum.Permissions.DataOrigin.html"},{"type":"module","title":"Datum.Plugins","doc":"The Plugins context. See the plugins/Plugin.ex file for information on what a plugin is.\nThese are all the functions for interacting with the Plugin model in the database","ref":"Datum.Plugins.html"},{"type":"function","title":"Datum.Plugins.change_plugin/2","doc":"Returns an `%Ecto.Changeset{}` for tracking plugin changes.","ref":"Datum.Plugins.html#change_plugin/2"},{"type":"function","title":"Examples - Datum.Plugins.change_plugin/2","doc":"iex> change_plugin(plugin)\n    %Ecto.Changeset{data: %Plugin{}}","ref":"Datum.Plugins.html#change_plugin/2-examples"},{"type":"function","title":"Datum.Plugins.create_plugin/1","doc":"Creates a plugin.","ref":"Datum.Plugins.html#create_plugin/1"},{"type":"function","title":"Examples - Datum.Plugins.create_plugin/1","doc":"iex> create_plugin(%{field: value})\n    {:ok, %Plugin{}}\n\n    iex> create_plugin(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Plugins.html#create_plugin/1-examples"},{"type":"function","title":"Datum.Plugins.delete_plugin/1","doc":"Deletes a plugin.","ref":"Datum.Plugins.html#delete_plugin/1"},{"type":"function","title":"Examples - Datum.Plugins.delete_plugin/1","doc":"iex> delete_plugin(plugin)\n    {:ok, %Plugin{}}\n\n    iex> delete_plugin(plugin)\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Plugins.html#delete_plugin/1-examples"},{"type":"function","title":"Datum.Plugins.get_plugin!/1","doc":"Gets a single plugin.\n\nRaises `Ecto.NoResultsError` if the Plugin does not exist.","ref":"Datum.Plugins.html#get_plugin!/1"},{"type":"function","title":"Examples - Datum.Plugins.get_plugin!/1","doc":"iex> get_plugin!(123)\n    %Plugin{}\n\n    iex> get_plugin!(456)\n    ** (Ecto.NoResultsError)","ref":"Datum.Plugins.html#get_plugin!/1-examples"},{"type":"function","title":"Datum.Plugins.list_plugin_info/0","doc":"","ref":"Datum.Plugins.html#list_plugin_info/0"},{"type":"function","title":"Datum.Plugins.list_plugins/0","doc":"Returns the list of plugins.","ref":"Datum.Plugins.html#list_plugins/0"},{"type":"function","title":"Examples - Datum.Plugins.list_plugins/0","doc":"iex> list_plugins()\n    [%Plugin{}, ...]","ref":"Datum.Plugins.html#list_plugins/0-examples"},{"type":"function","title":"Datum.Plugins.list_plugins_by_extensions/1","doc":"","ref":"Datum.Plugins.html#list_plugins_by_extensions/1"},{"type":"function","title":"Datum.Plugins.update_plugin/2","doc":"Updates a plugin.","ref":"Datum.Plugins.html#update_plugin/2"},{"type":"function","title":"Examples - Datum.Plugins.update_plugin/2","doc":"iex> update_plugin(plugin, %{field: new_value})\n    {:ok, %Plugin{}}\n\n    iex> update_plugin(plugin, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Datum.Plugins.html#update_plugin/2-examples"},{"type":"module","title":"Datum.Plugins.CSV","doc":"General metadata extraction for Parquet files","ref":"Datum.Plugins.CSV.html"},{"type":"behaviour","title":"Datum.Plugins.Extractor","doc":"Extractor module for running either the plugin system for extracting metadata\nor native elixir code to do the same.","ref":"Datum.Plugins.Extractor.html"},{"type":"callback","title":"Datum.Plugins.Extractor.extract/2","doc":"The extract behavior that each Elixir based extractor should implement","ref":"Datum.Plugins.Extractor.html#c:extract/2"},{"type":"function","title":"Datum.Plugins.Extractor.extract_with_plugin/3","doc":"Extract with plugin is in charge of loading the WASM or Elixir modules from the Plugin schema and\nrunning the WASI runtime. Keep in mind that we should try and limit how\noften we compile the module, but we still need to start a genserver each time\nin order to limit file visibility to the directory where the file is at.\n\nIn time the pipeline running this should be intelligent enough to run all loaded scanners\nfor the directory instead of recompiling for each one.","ref":"Datum.Plugins.Extractor.html#extract_with_plugin/3"},{"type":"module","title":"Datum.Plugins.Parquet","doc":"General metadata extraction for Parquet files","ref":"Datum.Plugins.Parquet.html"},{"type":"module","title":"Datum.Plugins.Plugin","doc":"Plugin represents a plugin supplied either by the system or by the user.\nThese plugins are typically used for file system scanning and metadata extraction.\nPlugins can be WASM modules, either raw binary or on disk, or Elixir modules implementing\nthe correct plugin type behavior.","ref":"Datum.Plugins.Plugin.html"},{"type":"module","title":"Datum.Plugins.TdmsIndex","doc":"General metadata extraction for TDMS index files","ref":"Datum.Plugins.TdmsIndex.html"},{"type":"module","title":"Datum.Release","doc":"Used for executing DB release tasks when run in production without Mix\ninstalled.","ref":"Datum.Release.html"},{"type":"function","title":"Datum.Release.help/1","doc":"","ref":"Datum.Release.html#help/1"},{"type":"function","title":"Datum.Release.init/1","doc":"","ref":"Datum.Release.html#init/1"},{"type":"function","title":"Datum.Release.migrate/0","doc":"","ref":"Datum.Release.html#migrate/0"},{"type":"function","title":"Datum.Release.rollback/2","doc":"","ref":"Datum.Release.html#rollback/2"},{"type":"function","title":"Datum.Release.scan/1","doc":"","ref":"Datum.Release.html#scan/1"},{"type":"function","title":"Datum.Release.seed/1","doc":"","ref":"Datum.Release.html#seed/1"},{"type":"function","title":"Datum.Release.seed_db/1","doc":"","ref":"Datum.Release.html#seed_db/1"},{"type":"function","title":"Datum.Release.system_test/0","doc":"","ref":"Datum.Release.html#system_test/0"},{"type":"module","title":"Datum.Repo","doc":"This is meant to be the \"operations\" repo. This should hold user information, information on\npermissions, plugins, metadata models, maybe some pointers to data platforms - BUT NOT THE DATA ITSELF.","ref":"Datum.Repo.html"},{"type":"function","title":"Datum.Repo.aggregate/3","doc":"","ref":"Datum.Repo.html#aggregate/3"},{"type":"function","title":"Datum.Repo.aggregate/4","doc":"","ref":"Datum.Repo.html#aggregate/4"},{"type":"function","title":"Datum.Repo.all/2","doc":"","ref":"Datum.Repo.html#all/2"},{"type":"function","title":"Datum.Repo.checked_out?/0","doc":"","ref":"Datum.Repo.html#checked_out?/0"},{"type":"function","title":"Datum.Repo.checkout/2","doc":"","ref":"Datum.Repo.html#checkout/2"},{"type":"function","title":"Datum.Repo.child_spec/1","doc":"","ref":"Datum.Repo.html#child_spec/1"},{"type":"function","title":"Datum.Repo.config/0","doc":"","ref":"Datum.Repo.html#config/0"},{"type":"function","title":"Datum.Repo.default_options/1","doc":"","ref":"Datum.Repo.html#default_options/1"},{"type":"function","title":"Datum.Repo.delete/2","doc":"","ref":"Datum.Repo.html#delete/2"},{"type":"function","title":"Datum.Repo.delete!/2","doc":"","ref":"Datum.Repo.html#delete!/2"},{"type":"function","title":"Datum.Repo.delete_all/2","doc":"","ref":"Datum.Repo.html#delete_all/2"},{"type":"function","title":"Datum.Repo.disconnect_all/2","doc":"A convenience function for SQL-based repositories that forces all connections in the\npool to disconnect within the given interval.\n\nSee `Ecto.Adapters.SQL.disconnect_all/3` for more information.","ref":"Datum.Repo.html#disconnect_all/2"},{"type":"function","title":"Datum.Repo.exists?/2","doc":"","ref":"Datum.Repo.html#exists?/2"},{"type":"function","title":"Datum.Repo.explain/3","doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar\ndepending on the adapter to obtain statistics for the given query.\n\nSee `Ecto.Adapters.SQL.explain/4` for more information.","ref":"Datum.Repo.html#explain/3"},{"type":"function","title":"Datum.Repo.get/3","doc":"","ref":"Datum.Repo.html#get/3"},{"type":"function","title":"Datum.Repo.get!/3","doc":"","ref":"Datum.Repo.html#get!/3"},{"type":"function","title":"Datum.Repo.get_by/3","doc":"","ref":"Datum.Repo.html#get_by/3"},{"type":"function","title":"Datum.Repo.get_by!/3","doc":"","ref":"Datum.Repo.html#get_by!/3"},{"type":"function","title":"Datum.Repo.get_dynamic_repo/0","doc":"","ref":"Datum.Repo.html#get_dynamic_repo/0"},{"type":"function","title":"Datum.Repo.in_transaction?/0","doc":"","ref":"Datum.Repo.html#in_transaction?/0"},{"type":"function","title":"Datum.Repo.insert/2","doc":"","ref":"Datum.Repo.html#insert/2"},{"type":"function","title":"Datum.Repo.insert!/2","doc":"","ref":"Datum.Repo.html#insert!/2"},{"type":"function","title":"Datum.Repo.insert_all/3","doc":"","ref":"Datum.Repo.html#insert_all/3"},{"type":"function","title":"Datum.Repo.insert_or_update/2","doc":"","ref":"Datum.Repo.html#insert_or_update/2"},{"type":"function","title":"Datum.Repo.insert_or_update!/2","doc":"","ref":"Datum.Repo.html#insert_or_update!/2"},{"type":"function","title":"Datum.Repo.load/2","doc":"","ref":"Datum.Repo.html#load/2"},{"type":"function","title":"Datum.Repo.one/2","doc":"","ref":"Datum.Repo.html#one/2"},{"type":"function","title":"Datum.Repo.one!/2","doc":"","ref":"Datum.Repo.html#one!/2"},{"type":"function","title":"Datum.Repo.preload/3","doc":"","ref":"Datum.Repo.html#preload/3"},{"type":"function","title":"Datum.Repo.prepare_query/3","doc":"","ref":"Datum.Repo.html#prepare_query/3"},{"type":"function","title":"Datum.Repo.put_dynamic_repo/1","doc":"","ref":"Datum.Repo.html#put_dynamic_repo/1"},{"type":"function","title":"Datum.Repo.query/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query/4` for more information.","ref":"Datum.Repo.html#query/3"},{"type":"function","title":"Datum.Repo.query!/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query!/4` for more information.","ref":"Datum.Repo.html#query!/3"},{"type":"function","title":"Datum.Repo.query_many/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many/4` for more information.","ref":"Datum.Repo.html#query_many/3"},{"type":"function","title":"Datum.Repo.query_many!/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many!/4` for more information.","ref":"Datum.Repo.html#query_many!/3"},{"type":"function","title":"Datum.Repo.reload/2","doc":"","ref":"Datum.Repo.html#reload/2"},{"type":"function","title":"Datum.Repo.reload!/2","doc":"","ref":"Datum.Repo.html#reload!/2"},{"type":"function","title":"Datum.Repo.rollback/1","doc":"","ref":"Datum.Repo.html#rollback/1"},{"type":"function","title":"Datum.Repo.start_link/1","doc":"","ref":"Datum.Repo.html#start_link/1"},{"type":"function","title":"Datum.Repo.stop/1","doc":"","ref":"Datum.Repo.html#stop/1"},{"type":"function","title":"Datum.Repo.stream/2","doc":"","ref":"Datum.Repo.html#stream/2"},{"type":"function","title":"Datum.Repo.to_sql/2","doc":"A convenience function for SQL-based repositories that translates the given query to SQL.\n\nSee `Ecto.Adapters.SQL.to_sql/3` for more information.","ref":"Datum.Repo.html#to_sql/2"},{"type":"function","title":"Datum.Repo.transaction/2","doc":"","ref":"Datum.Repo.html#transaction/2"},{"type":"function","title":"Datum.Repo.update/2","doc":"","ref":"Datum.Repo.html#update/2"},{"type":"function","title":"Datum.Repo.update!/2","doc":"","ref":"Datum.Repo.html#update!/2"},{"type":"function","title":"Datum.Repo.update_all/3","doc":"","ref":"Datum.Repo.html#update_all/3"},{"type":"module","title":"Datum.Scanner","doc":"This is a GenServer in charge of running scan processes from the CLI.  \nIf you are wanting the server or other processes to run scanning - prefer using the scanner you\nneed directly.","ref":"Datum.Scanner.html"},{"type":"function","title":"Datum.Scanner.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Datum.Scanner.html#child_spec/1"},{"type":"function","title":"Datum.Scanner.scan/3","doc":"","ref":"Datum.Scanner.html#scan/3"},{"type":"function","title":"Datum.Scanner.start_link/1","doc":"","ref":"Datum.Scanner.html#start_link/1"},{"type":"function","title":"Datum.Scanner.watch/3","doc":"","ref":"Datum.Scanner.html#watch/3"},{"type":"module","title":"Datum.Scanners.Filesystem","doc":"Filesystem scanner is the primary scanning tool used by the CLI when on a local\nsystem. Feed it the root path and it will recursively run through the contained\nfolders/files and run all enabled plugins on them.","ref":"Datum.Scanners.Filesystem.html"},{"type":"function","title":"Datum.Scanners.Filesystem.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\n`arg` is passed as the argument to `Task.start_link/1` in the `:start` field\nof the spec.\n\nFor more information, see the `Supervisor` module,\nthe `Supervisor.child_spec/2` function and the `t:Supervisor.child_spec/0` type.","ref":"Datum.Scanners.Filesystem.html#child_spec/1"},{"type":"function","title":"Datum.Scanners.Filesystem.scan_directory/4","doc":"This version of scan_directory accepts an Origin record and assumes\nthat, because it's not just an Origin ID - that we're running this \non the server and have direct access to the filesystem in question","ref":"Datum.Scanners.Filesystem.html#scan_directory/4"},{"type":"function","title":"Datum.Scanners.Filesystem.scan_file/5","doc":"scan_file scans a file in the directory and runs all the plugins against it and emits to \nthe database","ref":"Datum.Scanners.Filesystem.html#scan_file/5"},{"type":"module","title":"Datum.Search","doc":"Search is a GenServer (https://hexdocs.pm/elixir/GenServer.html) which is in charge of dispatching\na user search across all the data origins - because each origin is it's own database we had a few\nways of approaching this - from attaching and combining tables in a single sqlite3 db, to doing this\nconcurrent search. We chose the concurrent search because there might be hundreds or more data origins\nand that could easily break an SQL query, not to mention potentially swamp a single database.","ref":"Datum.Search.html"},{"type":"function","title":"Datum.Search.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Datum.Search.html#child_spec/1"},{"type":"function","title":"Datum.Search.search_origins/4","doc":"Search across all Data Origins apart from those in the excluded list. These searches\nwill run concurrently in a SupervisedTask.","ref":"Datum.Search.html#search_origins/4"},{"type":"function","title":"Datum.Search.start_link/1","doc":"","ref":"Datum.Search.html#start_link/1"},{"type":"module","title":"DatumWeb","doc":"The entrypoint for defining your web interface, such\nas controllers, components, channels, and so on.\n\nThis can be used in your application as:\n\n    use DatumWeb, :controller\n    use DatumWeb, :html\n\nThe definitions below will be executed for every controller,\ncomponent, etc, so keep them short and clean, focused\non imports, uses and aliases.\n\nDo NOT define functions inside the quoted expressions\nbelow. Instead, define additional modules and import\nthose modules here.","ref":"DatumWeb.html"},{"type":"macro","title":"DatumWeb.__using__/1","doc":"When used, dispatch to the appropriate controller/live_view/etc.","ref":"DatumWeb.html#__using__/1"},{"type":"function","title":"DatumWeb.channel/0","doc":"","ref":"DatumWeb.html#channel/0"},{"type":"function","title":"DatumWeb.controller/0","doc":"","ref":"DatumWeb.html#controller/0"},{"type":"function","title":"DatumWeb.html/0","doc":"","ref":"DatumWeb.html#html/0"},{"type":"function","title":"DatumWeb.live_component/0","doc":"","ref":"DatumWeb.html#live_component/0"},{"type":"function","title":"DatumWeb.live_view/0","doc":"","ref":"DatumWeb.html#live_view/0"},{"type":"function","title":"DatumWeb.router/0","doc":"","ref":"DatumWeb.html#router/0"},{"type":"function","title":"DatumWeb.static_paths/0","doc":"","ref":"DatumWeb.html#static_paths/0"},{"type":"function","title":"DatumWeb.verified_routes/0","doc":"","ref":"DatumWeb.html#verified_routes/0"},{"type":"module","title":"DatumWeb.AgentLive","doc":"This is the tab for interacting with an AI agent, if the integration is enabled and\na suitable configuration (like Ollama) is present. Currently we do only support OpenAI\nenabled endpoints (which Ollama supports).","ref":"DatumWeb.AgentLive.html"},{"type":"function","title":"DatumWeb.AgentLive.display_name/0","doc":"","ref":"DatumWeb.AgentLive.html#display_name/0"},{"type":"module","title":"DatumWeb.CLIChannel","doc":"","ref":"DatumWeb.CLIChannel.html"},{"type":"function","title":"DatumWeb.CLIChannel.child_spec/1","doc":"","ref":"DatumWeb.CLIChannel.html#child_spec/1"},{"type":"function","title":"DatumWeb.CLIChannel.start_link/1","doc":"","ref":"DatumWeb.CLIChannel.html#start_link/1"},{"type":"module","title":"DatumWeb.CLISocket","doc":"","ref":"DatumWeb.CLISocket.html"},{"type":"module","title":"DatumWeb.Client","doc":"This is the HTTP client for the application.","ref":"DatumWeb.Client.html"},{"type":"function","title":"DatumWeb.Client.create_data/3","doc":"","ref":"DatumWeb.Client.html#create_data/3"},{"type":"function","title":"DatumWeb.Client.create_data!/3","doc":"","ref":"DatumWeb.Client.html#create_data!/3"},{"type":"function","title":"DatumWeb.Client.create_origin/2","doc":"","ref":"DatumWeb.Client.html#create_origin/2"},{"type":"function","title":"DatumWeb.Client.create_origin!/2","doc":"","ref":"DatumWeb.Client.html#create_origin!/2"},{"type":"function","title":"DatumWeb.Client.current_user_info/1","doc":"Gets current user information for supplied token - we only provide id and email here, we don't want people\ntoken fishing.","ref":"DatumWeb.Client.html#current_user_info/1"},{"type":"function","title":"DatumWeb.Client.current_user_info!/1","doc":"Same as current_user_info/1 but throws an exception on error","ref":"DatumWeb.Client.html#current_user_info!/1"},{"type":"function","title":"DatumWeb.Client.list_origins/1","doc":"Lists all DataOrigins from the database user has access to","ref":"DatumWeb.Client.html#list_origins/1"},{"type":"function","title":"DatumWeb.Client.list_origins!/1","doc":"Same as list_origins/1 but raises an exception on unexpected response or error","ref":"DatumWeb.Client.html#list_origins!/1"},{"type":"function","title":"DatumWeb.Client.list_plugins/1","doc":"Lists all Plugins from the database user has access to - *does not* return the actual plugin","ref":"DatumWeb.Client.html#list_plugins/1"},{"type":"function","title":"DatumWeb.Client.list_plugins!/1","doc":"Same as list_plugins/1 but raises an exception on unexpected response or error","ref":"DatumWeb.Client.html#list_plugins!/1"},{"type":"function","title":"DatumWeb.Client.new/2","doc":"Options contain things like the token for Bearer authentication.","ref":"DatumWeb.Client.html#new/2"},{"type":"function","title":"DatumWeb.Client.new!/2","doc":"","ref":"DatumWeb.Client.html#new!/2"},{"type":"function","title":"DatumWeb.Client.upload_data_origin/2","doc":"Uploads a local DataOrigin database file to the central server.","ref":"DatumWeb.Client.html#upload_data_origin/2"},{"type":"function","title":"DatumWeb.Client.upload_data_origin!/2","doc":"Same as upload_data_origin/2 but raises if there is an error","ref":"DatumWeb.Client.html#upload_data_origin!/2"},{"type":"module","title":"DatumWeb.CoreComponents","doc":"Provides core UI components.\n\nAt first glance, this module may seem daunting, but its goal is to provide\ncore building blocks for your application, such as modals, tables, and\nforms. The components consist mostly of markup and are well-documented\nwith doc strings and declarative assigns. You may customize and style\nthem in any way you want, based on your application growth and needs.\n\nThe default components use Tailwind CSS, a utility-first CSS framework.\nSee the [Tailwind CSS documentation](https://tailwindcss.com) to learn\nhow to customize them or feel free to swap in another framework altogether.\n\nIcons are provided by [heroicons](https://heroicons.com). See `icon/1` for usage.","ref":"DatumWeb.CoreComponents.html"},{"type":"function","title":"DatumWeb.CoreComponents.back/1","doc":"Renders a back navigation link.","ref":"DatumWeb.CoreComponents.html#back/1"},{"type":"function","title":"Examples - DatumWeb.CoreComponents.back/1","doc":"<.back navigate={~p\"/posts\"}>Back to posts</.back>","ref":"DatumWeb.CoreComponents.html#back/1-examples"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.back/1","doc":"* `navigate` (`:any`) (required)","ref":"DatumWeb.CoreComponents.html#back/1-attributes"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.back/1","doc":"* `inner_block` (required)","ref":"DatumWeb.CoreComponents.html#back/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.button/1","doc":"Renders a button.","ref":"DatumWeb.CoreComponents.html#button/1"},{"type":"function","title":"Examples - DatumWeb.CoreComponents.button/1","doc":"<.button>Send!</.button>\n    <.button phx-click=\"go\" class=\"ml-2\">Send!</.button>","ref":"DatumWeb.CoreComponents.html#button/1-examples"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.button/1","doc":"* `type` (`:string`) - Defaults to `nil`.\n* `class` (`:string`) - Defaults to `nil`.\n* Global attributes are accepted. Supports all globals plus: `[\"disabled\", \"form\", \"name\", \"value\"]`.","ref":"DatumWeb.CoreComponents.html#button/1-attributes"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.button/1","doc":"* `inner_block` (required)","ref":"DatumWeb.CoreComponents.html#button/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.error/1","doc":"Generates a generic error message.","ref":"DatumWeb.CoreComponents.html#error/1"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.error/1","doc":"* `inner_block` (required)","ref":"DatumWeb.CoreComponents.html#error/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.file_page/1","doc":"Renders information about a file","ref":"DatumWeb.CoreComponents.html#file_page/1"},{"type":"function","title":"DatumWeb.CoreComponents.file_table/1","doc":"Renders a file-explorer like table","ref":"DatumWeb.CoreComponents.html#file_table/1"},{"type":"function","title":"Examples - DatumWeb.CoreComponents.file_table/1","doc":"<.table id=\"users\" rows={@users}>\n      <:col :let={user} label=\"id\"><%= user.id %></:col>\n      <:col :let={user} label=\"username\"><%= user.username %></:col>\n    </.table>","ref":"DatumWeb.CoreComponents.html#file_table/1-examples"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.file_table/1","doc":"* `id` (`:string`) (required)\n* `rows` (`:list`) (required)\n* `row_id` (`:any`) - the function for generating the row id. Defaults to `nil`.\n* `row_click` (`:any`) - the function for handling phx-click on each row. Defaults to `nil`.\n* `row_item` (`:any`) - the function for mapping each row before calling the :col and :action slots. Defaults to `&Function.identity/1`.","ref":"DatumWeb.CoreComponents.html#file_table/1-attributes"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.file_table/1","doc":"* `col` (required) - Accepts attributes:\n\n  * `label` (`:string`)\n* `row_icon` - Accepts attributes:\n\n  * `name` (`:string`)\n* `action` - the slot for showing user actions in the last table column.","ref":"DatumWeb.CoreComponents.html#file_table/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.flash/1","doc":"Renders flash notices.","ref":"DatumWeb.CoreComponents.html#flash/1"},{"type":"function","title":"Examples - DatumWeb.CoreComponents.flash/1","doc":"<.flash kind={:info} flash={@flash} />\n    <.flash kind={:info} phx-mounted={show(\"#flash\")}>Welcome Back!</.flash>","ref":"DatumWeb.CoreComponents.html#flash/1-examples"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.flash/1","doc":"* `id` (`:string`) - the optional id of flash container.\n* `flash` (`:map`) - the map of flash messages to display. Defaults to `%{}`.\n* `title` (`:string`) - Defaults to `nil`.\n* `kind` (`:atom`) - used for styling and flash lookup.Must be one of `:info`, or `:error`.\n* Global attributes are accepted. the arbitrary HTML attributes to add to the flash container.","ref":"DatumWeb.CoreComponents.html#flash/1-attributes"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.flash/1","doc":"* `inner_block` - the optional inner block that renders the flash message.","ref":"DatumWeb.CoreComponents.html#flash/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.flash_group/1","doc":"Shows the flash group with standard titles and content.","ref":"DatumWeb.CoreComponents.html#flash_group/1"},{"type":"function","title":"Examples - DatumWeb.CoreComponents.flash_group/1","doc":"<.flash_group flash={@flash} />","ref":"DatumWeb.CoreComponents.html#flash_group/1-examples"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.flash_group/1","doc":"* `flash` (`:map`) (required) - the map of flash messages.\n* `id` (`:string`) - the optional id of flash container. Defaults to `\"flash-group\"`.","ref":"DatumWeb.CoreComponents.html#flash_group/1-attributes"},{"type":"function","title":"DatumWeb.CoreComponents.header/1","doc":"Renders a header with title.","ref":"DatumWeb.CoreComponents.html#header/1"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.header/1","doc":"* `class` (`:string`) - Defaults to `nil`.","ref":"DatumWeb.CoreComponents.html#header/1-attributes"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.header/1","doc":"* `inner_block` (required)\n* `subtitle`\n* `actions`","ref":"DatumWeb.CoreComponents.html#header/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.hide/2","doc":"","ref":"DatumWeb.CoreComponents.html#hide/2"},{"type":"function","title":"DatumWeb.CoreComponents.hide_modal/2","doc":"","ref":"DatumWeb.CoreComponents.html#hide_modal/2"},{"type":"function","title":"DatumWeb.CoreComponents.icon/1","doc":"Renders a [Heroicon](https://heroicons.com).\n\nHeroicons come in three styles – outline, solid, and mini.\nBy default, the outline style is used, but solid and mini may\nbe applied by using the `-solid` and `-mini` suffix.\n\nYou can customize the size and colors of the icons by setting\nwidth, height, and background color classes.\n\nIcons are extracted from the `deps/heroicons` directory and bundled within\nyour compiled app.css by the plugin in your `assets/tailwind.config.js`.","ref":"DatumWeb.CoreComponents.html#icon/1"},{"type":"function","title":"Examples - DatumWeb.CoreComponents.icon/1","doc":"<.icon name=\"hero-x-mark-solid\" />\n    <.icon name=\"hero-arrow-path\" class=\"ml-1 w-3 h-3 animate-spin\" />","ref":"DatumWeb.CoreComponents.html#icon/1-examples"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.icon/1","doc":"* `name` (`:string`) (required)\n* `class` (`:string`) - Defaults to `nil`.","ref":"DatumWeb.CoreComponents.html#icon/1-attributes"},{"type":"function","title":"DatumWeb.CoreComponents.input/1","doc":"Renders an input with label and error messages.\n\nA `Phoenix.HTML.FormField` may be passed as argument,\nwhich is used to retrieve the input name, id, and values.\nOtherwise all attributes may be passed explicitly.","ref":"DatumWeb.CoreComponents.html#input/1"},{"type":"function","title":"Types - DatumWeb.CoreComponents.input/1","doc":"This function accepts all HTML input types, considering that:\n\n  * You may also set `type=\"select\"` to render a ` ` tag\n\n  * `type=\"checkbox\"` is used exclusively to render boolean values\n\n  * For live file uploads, see `Phoenix.Component.live_file_input/1`\n\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\nfor more information. Unsupported types, such as hidden and radio,\nare best written directly in your templates.","ref":"DatumWeb.CoreComponents.html#input/1-types"},{"type":"function","title":"Examples - DatumWeb.CoreComponents.input/1","doc":"<.input field={@form[:email]} type=\"email\" />\n    <.input name=\"my-input\" errors={[\"oh no!\"]} />","ref":"DatumWeb.CoreComponents.html#input/1-examples"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.input/1","doc":"* `id` (`:any`) - Defaults to `nil`.\n* `name` (`:any`)\n* `label` (`:string`) - Defaults to `nil`.\n* `value` (`:any`)\n* `type` (`:string`) - Defaults to `\"text\"`.\n* `field` (`Phoenix.HTML.FormField`) - a form field struct retrieved from the form, for example: @form[:email].\n* `errors` (`:list`) - Defaults to `[]`.\n* `checked` (`:boolean`) - the checked flag for checkbox inputs.\n* `prompt` (`:string`) - the prompt for select inputs. Defaults to `nil`.\n* `options` (`:list`) - the options to pass to Phoenix.HTML.Form.options_for_select/2.\n* `multiple` (`:boolean`) - the multiple flag for select inputs. Defaults to `false`.\n* Global attributes are accepted. Supports all globals plus: `[\"accept\", \"autocomplete\", \"capture\", \"cols\", \"disabled\", \"form\", \"list\", \"max\", \"maxlength\", \"min\", \"minlength\", \"multiple\", \"pattern\", \"placeholder\", \"readonly\", \"required\", \"rows\", \"size\", \"step\"]`.","ref":"DatumWeb.CoreComponents.html#input/1-attributes"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.input/1","doc":"* `inner_block`","ref":"DatumWeb.CoreComponents.html#input/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.label/1","doc":"Renders a label.","ref":"DatumWeb.CoreComponents.html#label/1"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.label/1","doc":"* `for` (`:string`) - Defaults to `nil`.","ref":"DatumWeb.CoreComponents.html#label/1-attributes"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.label/1","doc":"* `inner_block` (required)","ref":"DatumWeb.CoreComponents.html#label/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.list/1","doc":"Renders a data list.","ref":"DatumWeb.CoreComponents.html#list/1"},{"type":"function","title":"Examples - DatumWeb.CoreComponents.list/1","doc":"<.list>\n      <:item title=\"Title\"><%= @post.title %></:item>\n      <:item title=\"Views\"><%= @post.views %></:item>\n    </.list>","ref":"DatumWeb.CoreComponents.html#list/1-examples"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.list/1","doc":"* `item` (required) - Accepts attributes:\n\n  * `title` (`:string`) (required)","ref":"DatumWeb.CoreComponents.html#list/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.modal/1","doc":"Renders a modal.","ref":"DatumWeb.CoreComponents.html#modal/1"},{"type":"function","title":"Examples - DatumWeb.CoreComponents.modal/1","doc":"<.modal id=\"confirm-modal\">\n      This is a modal.\n    </.modal>\n\nJS commands may be passed to the `:on_cancel` to configure\nthe closing/cancel event, for example:\n\n    <.modal id=\"confirm\" on_cancel={JS.navigate(~p\"/posts\")}>\n      This is another modal.\n    </.modal>","ref":"DatumWeb.CoreComponents.html#modal/1-examples"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.modal/1","doc":"* `id` (`:string`) (required)\n* `show` (`:boolean`) - Defaults to `false`.\n* `on_cancel` (`Phoenix.LiveView.JS`) - Defaults to `%Phoenix.LiveView.JS{ops: []}`.","ref":"DatumWeb.CoreComponents.html#modal/1-attributes"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.modal/1","doc":"* `inner_block` (required)","ref":"DatumWeb.CoreComponents.html#modal/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.show/2","doc":"","ref":"DatumWeb.CoreComponents.html#show/2"},{"type":"function","title":"DatumWeb.CoreComponents.show_modal/2","doc":"","ref":"DatumWeb.CoreComponents.html#show_modal/2"},{"type":"function","title":"DatumWeb.CoreComponents.simple_form/1","doc":"Renders a simple form.","ref":"DatumWeb.CoreComponents.html#simple_form/1"},{"type":"function","title":"Examples - DatumWeb.CoreComponents.simple_form/1","doc":"<.simple_form for={@form} phx-change=\"validate\" phx-submit=\"save\">\n      <.input field={@form[:email]} label=\"Email\"/>\n      <.input field={@form[:username]} label=\"Username\" />\n      <:actions>\n        <.button>Save</.button>\n      </:actions>\n    </.simple_form>","ref":"DatumWeb.CoreComponents.html#simple_form/1-examples"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.simple_form/1","doc":"* `for` (`:any`) (required) - the data structure for the form.\n* `as` (`:any`) - the server side parameter to collect all input under. Defaults to `nil`.\n* `class` (`:string`) - Defaults to `nil`.\n* Global attributes are accepted. the arbitrary HTML attributes to apply to the form tag. Supports all globals plus: `[\"autocomplete\", \"name\", \"rel\", \"action\", \"enctype\", \"method\", \"novalidate\", \"target\", \"multipart\"]`.","ref":"DatumWeb.CoreComponents.html#simple_form/1-attributes"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.simple_form/1","doc":"* `inner_block` (required)\n* `actions` - the slot for form actions, such as a submit button.","ref":"DatumWeb.CoreComponents.html#simple_form/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.table/1","doc":"Renders a table with generic styling.","ref":"DatumWeb.CoreComponents.html#table/1"},{"type":"function","title":"Examples - DatumWeb.CoreComponents.table/1","doc":"<.table id=\"users\" rows={@users}>\n      <:col :let={user} label=\"id\"><%= user.id %></:col>\n      <:col :let={user} label=\"username\"><%= user.username %></:col>\n    </.table>","ref":"DatumWeb.CoreComponents.html#table/1-examples"},{"type":"function","title":"Attributes - DatumWeb.CoreComponents.table/1","doc":"* `id` (`:string`) (required)\n* `rows` (`:list`) (required)\n* `row_id` (`:any`) - the function for generating the row id. Defaults to `nil`.\n* `row_click` (`:any`) - the function for handling phx-click on each row. Defaults to `nil`.\n* `row_item` (`:any`) - the function for mapping each row before calling the :col and :action slots. Defaults to `&Function.identity/1`.","ref":"DatumWeb.CoreComponents.html#table/1-attributes"},{"type":"function","title":"Slots - DatumWeb.CoreComponents.table/1","doc":"* `col` (required) - Accepts attributes:\n\n  * `label` (`:string`)\n* `action` - the slot for showing user actions in the last table column.","ref":"DatumWeb.CoreComponents.html#table/1-slots"},{"type":"function","title":"DatumWeb.CoreComponents.translate_error/1","doc":"Translates an error message using gettext.","ref":"DatumWeb.CoreComponents.html#translate_error/1"},{"type":"function","title":"DatumWeb.CoreComponents.translate_errors/2","doc":"Translates the errors for a field from a keyword list of errors.","ref":"DatumWeb.CoreComponents.html#translate_errors/2"},{"type":"module","title":"DatumWeb.Endpoint","doc":"","ref":"DatumWeb.Endpoint.html"},{"type":"function","title":"DatumWeb.Endpoint.broadcast/3","doc":"","ref":"DatumWeb.Endpoint.html#broadcast/3"},{"type":"function","title":"DatumWeb.Endpoint.broadcast!/3","doc":"","ref":"DatumWeb.Endpoint.html#broadcast!/3"},{"type":"function","title":"DatumWeb.Endpoint.broadcast_from/4","doc":"","ref":"DatumWeb.Endpoint.html#broadcast_from/4"},{"type":"function","title":"DatumWeb.Endpoint.broadcast_from!/4","doc":"","ref":"DatumWeb.Endpoint.html#broadcast_from!/4"},{"type":"function","title":"DatumWeb.Endpoint.call/2","doc":"","ref":"DatumWeb.Endpoint.html#call/2"},{"type":"function","title":"DatumWeb.Endpoint.child_spec/1","doc":"Returns the child specification to start the endpoint\nunder a supervision tree.","ref":"DatumWeb.Endpoint.html#child_spec/1"},{"type":"function","title":"DatumWeb.Endpoint.config/2","doc":"Returns the endpoint configuration for `key`\n\nReturns `default` if the key does not exist.","ref":"DatumWeb.Endpoint.html#config/2"},{"type":"function","title":"DatumWeb.Endpoint.config_change/2","doc":"Reloads the configuration given the application environment changes.","ref":"DatumWeb.Endpoint.html#config_change/2"},{"type":"function","title":"DatumWeb.Endpoint.host/0","doc":"Returns the host for the given endpoint.","ref":"DatumWeb.Endpoint.html#host/0"},{"type":"function","title":"DatumWeb.Endpoint.init/1","doc":"","ref":"DatumWeb.Endpoint.html#init/1"},{"type":"function","title":"DatumWeb.Endpoint.local_broadcast/3","doc":"","ref":"DatumWeb.Endpoint.html#local_broadcast/3"},{"type":"function","title":"DatumWeb.Endpoint.local_broadcast_from/4","doc":"","ref":"DatumWeb.Endpoint.html#local_broadcast_from/4"},{"type":"function","title":"DatumWeb.Endpoint.path/1","doc":"Generates the path information when routing to this endpoint.","ref":"DatumWeb.Endpoint.html#path/1"},{"type":"function","title":"DatumWeb.Endpoint.script_name/0","doc":"Generates the script name.","ref":"DatumWeb.Endpoint.html#script_name/0"},{"type":"function","title":"DatumWeb.Endpoint.server_info/1","doc":"Returns the address and port that the server is running on","ref":"DatumWeb.Endpoint.html#server_info/1"},{"type":"function","title":"DatumWeb.Endpoint.start_link/1","doc":"Starts the endpoint supervision tree.\n\nAll other options are merged into the endpoint configuration.","ref":"DatumWeb.Endpoint.html#start_link/1"},{"type":"function","title":"DatumWeb.Endpoint.static_integrity/1","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file\nin `priv/static`. Meant to be used for Subresource Integrity with CDNs.","ref":"DatumWeb.Endpoint.html#static_integrity/1"},{"type":"function","title":"DatumWeb.Endpoint.static_lookup/1","doc":"Returns a two item tuple with the first item being the `static_path`\nand the second item being the `static_integrity`.","ref":"DatumWeb.Endpoint.html#static_lookup/1"},{"type":"function","title":"DatumWeb.Endpoint.static_path/1","doc":"Generates a route to a static file in `priv/static`.","ref":"DatumWeb.Endpoint.html#static_path/1"},{"type":"function","title":"DatumWeb.Endpoint.static_url/0","doc":"Generates the static URL without any path information.\n\nIt uses the configuration under `:static_url` to generate\nsuch. It falls back to `:url` if `:static_url` is not set.","ref":"DatumWeb.Endpoint.html#static_url/0"},{"type":"function","title":"DatumWeb.Endpoint.struct_url/0","doc":"Generates the endpoint base URL but as a `URI` struct.\n\nIt uses the configuration under `:url` to generate such.\nUseful for manipulating the URL data and passing it to\nURL helpers.","ref":"DatumWeb.Endpoint.html#struct_url/0"},{"type":"function","title":"DatumWeb.Endpoint.subscribe/2","doc":"","ref":"DatumWeb.Endpoint.html#subscribe/2"},{"type":"function","title":"DatumWeb.Endpoint.unsubscribe/1","doc":"","ref":"DatumWeb.Endpoint.html#unsubscribe/1"},{"type":"function","title":"DatumWeb.Endpoint.url/0","doc":"Generates the endpoint base URL without any path information.\n\nIt uses the configuration under `:url` to generate such.","ref":"DatumWeb.Endpoint.html#url/0"},{"type":"module","title":"DatumWeb.ErrorHTML","doc":"This module is invoked by your endpoint in case of errors on HTML requests.\n\nSee config/config.exs.","ref":"DatumWeb.ErrorHTML.html"},{"type":"function","title":"DatumWeb.ErrorHTML.render/2","doc":"","ref":"DatumWeb.ErrorHTML.html#render/2"},{"type":"module","title":"DatumWeb.ErrorJSON","doc":"This module is invoked by your endpoint in case of errors on JSON requests.\n\nSee config/config.exs.","ref":"DatumWeb.ErrorJSON.html"},{"type":"function","title":"DatumWeb.ErrorJSON.render/2","doc":"","ref":"DatumWeb.ErrorJSON.html#render/2"},{"type":"module","title":"DatumWeb.Gettext","doc":"A module providing Internationalization with a gettext-based API.\n\nBy using [Gettext](https://hexdocs.pm/gettext),\nyour module gains a set of macros for translations, for example:\n\n    import DatumWeb.Gettext\n\n    # Simple translation\n    gettext(\"Here is the string to translate\")\n\n    # Plural translation\n    ngettext(\"Here is the string to translate\",\n             \"Here are the strings to translate\",\n             3)\n\n    # Domain-based translation\n    dgettext(\"errors\", \"Here is the error message to translate\")\n\nSee the [Gettext Docs](https://hexdocs.pm/gettext) for detailed usage.","ref":"DatumWeb.Gettext.html"},{"type":"function","title":"DatumWeb.Gettext.handle_missing_bindings/2","doc":"","ref":"DatumWeb.Gettext.html#handle_missing_bindings/2"},{"type":"function","title":"DatumWeb.Gettext.handle_missing_plural_translation/7","doc":"","ref":"DatumWeb.Gettext.html#handle_missing_plural_translation/7"},{"type":"function","title":"DatumWeb.Gettext.handle_missing_translation/5","doc":"","ref":"DatumWeb.Gettext.html#handle_missing_translation/5"},{"type":"module","title":"DatumWeb.GraphExplorerLive","doc":"This is the live component for exploring data in a graph like manner. Typically started\nwith either one or a group of a data. This component allows users to traverse their data\nin a graph and make connections between pieces of data manually (planned, not currently implemented)","ref":"DatumWeb.GraphExplorerLive.html"},{"type":"function","title":"DatumWeb.GraphExplorerLive.display_name/0","doc":"","ref":"DatumWeb.GraphExplorerLive.html#display_name/0"},{"type":"module","title":"DatumWeb.HomeLive","doc":"This is the main navigation area after a user logs in. Consists of multiple panes of tabs, each\ntab should be its own separate live_view. Try to do as little as possible on this page, though it\nwill probably get more complicated as we add inter-view communication.","ref":"DatumWeb.HomeLive.html"},{"type":"function","title":"DatumWeb.HomeLive.handle_call/3","doc":"This handles calls from tabs wanting to put flashes to the socket - useful as we can't\npatch or put_flash/3 from inside the child live view","ref":"DatumWeb.HomeLive.html#handle_call/3"},{"type":"module","title":"DatumWeb.Layouts","doc":"This module holds different layouts used by your application.\n\nSee the `layouts` directory for all templates available.\nThe \"root\" layout is a skeleton rendered as part of the\napplication router. The \"app\" layout is set as the default\nlayout on both `use DatumWeb, :controller` and\n`use DatumWeb, :live_view`.","ref":"DatumWeb.Layouts.html"},{"type":"function","title":"DatumWeb.Layouts.app/1","doc":"","ref":"DatumWeb.Layouts.html#app/1"},{"type":"function","title":"DatumWeb.Layouts.root/1","doc":"","ref":"DatumWeb.Layouts.html#root/1"},{"type":"module","title":"DatumWeb.LiveComponent.ConnectData","doc":"This is used to connect two pieces of data, even between separate origins. This is used\nto create connections in the relationships field of %Data{} not connecting in the directory/file\nparadigm","ref":"DatumWeb.LiveComponent.ConnectData.html"},{"type":"function","title":"DatumWeb.LiveComponent.ConnectData.patch/2","doc":"","ref":"DatumWeb.LiveComponent.ConnectData.html#patch/2"},{"type":"module","title":"DatumWeb.LiveComponent.DeleteOrigin","doc":"This is used to delete a data origin","ref":"DatumWeb.LiveComponent.DeleteOrigin.html"},{"type":"function","title":"DatumWeb.LiveComponent.DeleteOrigin.patch/2","doc":"","ref":"DatumWeb.LiveComponent.DeleteOrigin.html#patch/2"},{"type":"module","title":"DatumWeb.LiveComponent.TDMSMetadata","doc":"This is used to display TDMS metadata, if present, within the File Viewer\non the Data Origin Explorer.","ref":"DatumWeb.LiveComponent.TDMSMetadata.html"},{"type":"module","title":"DatumWeb.OriginController","doc":"The json endpoints for working with Data Origins","ref":"DatumWeb.OriginController.html"},{"type":"function","title":"DatumWeb.OriginController.create/2","doc":"","ref":"DatumWeb.OriginController.html#create/2"},{"type":"function","title":"DatumWeb.OriginController.create_data/2","doc":"","ref":"DatumWeb.OriginController.html#create_data/2"},{"type":"function","title":"DatumWeb.OriginController.explore/2","doc":"","ref":"DatumWeb.OriginController.html#explore/2"},{"type":"function","title":"DatumWeb.OriginController.fetch/2","doc":"","ref":"DatumWeb.OriginController.html#fetch/2"},{"type":"function","title":"DatumWeb.OriginController.fetch_data/2","doc":"","ref":"DatumWeb.OriginController.html#fetch_data/2"},{"type":"function","title":"DatumWeb.OriginController.list/2","doc":"","ref":"DatumWeb.OriginController.html#list/2"},{"type":"function","title":"DatumWeb.OriginController.root_directory/2","doc":"","ref":"DatumWeb.OriginController.html#root_directory/2"},{"type":"module","title":"DatumWeb.OriginCreationLive","doc":"This is the tab for adding data.","ref":"DatumWeb.OriginCreationLive.html"},{"type":"function","title":"DatumWeb.OriginCreationLive.display_name/0","doc":"","ref":"DatumWeb.OriginCreationLive.html#display_name/0"},{"type":"module","title":"DatumWeb.OriginExplorerLive","doc":"This is our primary way of exploring a Data Origin. It is very similar\nto a file explorer, as it needs to represent directories and the files\nin those directories.\n\nThis should not embed any additional live views - only components. If you\nneed to build a live view, let's say a FileViewLive or something, then you\nshould message the parent to spawn the relevant tab - not spawn and save it\nhere.","ref":"DatumWeb.OriginExplorerLive.html"},{"type":"function","title":"DatumWeb.OriginExplorerLive.display_name/0","doc":"","ref":"DatumWeb.OriginExplorerLive.html#display_name/0"},{"type":"function","title":"DatumWeb.OriginExplorerLive.flash/3","doc":"","ref":"DatumWeb.OriginExplorerLive.html#flash/3"},{"type":"function","title":"DatumWeb.OriginExplorerLive.handle_info/2","doc":"Handles a flash request from components and propagates it up the chain.","ref":"DatumWeb.OriginExplorerLive.html#handle_info/2"},{"type":"function","title":"DatumWeb.OriginExplorerLive.patch/2","doc":"","ref":"DatumWeb.OriginExplorerLive.html#patch/2"},{"type":"function","title":"DatumWeb.OriginExplorerLive.update_state/1","doc":"","ref":"DatumWeb.OriginExplorerLive.html#update_state/1"},{"type":"module","title":"DatumWeb.PageController","doc":"","ref":"DatumWeb.PageController.html"},{"type":"function","title":"DatumWeb.PageController.home/2","doc":"","ref":"DatumWeb.PageController.html#home/2"},{"type":"module","title":"DatumWeb.PageHTML","doc":"This module contains pages rendered by PageController.\n\nSee the `page_html` directory for all templates available.","ref":"DatumWeb.PageHTML.html"},{"type":"function","title":"DatumWeb.PageHTML.home/1","doc":"","ref":"DatumWeb.PageHTML.html#home/1"},{"type":"module","title":"DatumWeb.PluginsController","doc":"The json endpoints for handling pluging information and binary module\nretrieval. Typically used by the CLI tool to sync for local use.","ref":"DatumWeb.PluginsController.html"},{"type":"function","title":"DatumWeb.PluginsController.list_info/2","doc":"","ref":"DatumWeb.PluginsController.html#list_info/2"},{"type":"module","title":"DatumWeb.Router","doc":"","ref":"DatumWeb.Router.html"},{"type":"function","title":"DatumWeb.Router.api/2","doc":"","ref":"DatumWeb.Router.html#api/2"},{"type":"function","title":"DatumWeb.Router.browser/2","doc":"","ref":"DatumWeb.Router.html#browser/2"},{"type":"function","title":"DatumWeb.Router.call/2","doc":"Callback invoked by Plug on every request.","ref":"DatumWeb.Router.html#call/2"},{"type":"function","title":"DatumWeb.Router.init/1","doc":"Callback required by Plug that initializes the router\nfor serving web requests.","ref":"DatumWeb.Router.html#init/1"},{"type":"module","title":"DatumWeb.SearchLive","doc":"This is our tab for running searches across the entirety of the Datum ecosystem.\nIf state exists, only hold the state of the query itself and filters.\n\nThis should not embed any additional live views - only components. If you\nneed to build a live view, let's say a FileViewLive or something, then you\nshould message the parent to spawn the relevant tab - not spawn and save it","ref":"DatumWeb.SearchLive.html"},{"type":"function","title":"DatumWeb.SearchLive.display_name/0","doc":"","ref":"DatumWeb.SearchLive.html#display_name/0"},{"type":"function","title":"DatumWeb.SearchLive.handle_event/3","doc":"","ref":"DatumWeb.SearchLive.html#handle_event/3"},{"type":"function","title":"DatumWeb.SearchLive.mount/3","doc":"","ref":"DatumWeb.SearchLive.html#mount/3"},{"type":"function","title":"DatumWeb.SearchLive.render/1","doc":"","ref":"DatumWeb.SearchLive.html#render/1"},{"type":"function","title":"DatumWeb.SearchLive.update_state/1","doc":"","ref":"DatumWeb.SearchLive.html#update_state/1"},{"type":"module","title":"DatumWeb.SocketClient","doc":"This is a SlipStream websocket client designed for the CLI to interact\nwith the central server.\n\nhttps://hexdocs.pm/slipstream/Slipstream.html - for more information","ref":"DatumWeb.SocketClient.html"},{"type":"function","title":"DatumWeb.SocketClient.child_spec/1","doc":"","ref":"DatumWeb.SocketClient.html#child_spec/1"},{"type":"function","title":"DatumWeb.SocketClient.remove_data/2","doc":"This sends a socket message requesting the client delete a peice of data","ref":"DatumWeb.SocketClient.html#remove_data/2"},{"type":"function","title":"DatumWeb.SocketClient.send_data/3","doc":"This sends a socket message with a piece of data to client.","ref":"DatumWeb.SocketClient.html#send_data/3"},{"type":"function","title":"DatumWeb.SocketClient.start_link/1","doc":"","ref":"DatumWeb.SocketClient.html#start_link/1"},{"type":"module","title":"DatumWeb.Telemetry","doc":"","ref":"DatumWeb.Telemetry.html"},{"type":"function","title":"DatumWeb.Telemetry.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"DatumWeb.Telemetry.html#child_spec/1"},{"type":"function","title":"DatumWeb.Telemetry.metrics/0","doc":"","ref":"DatumWeb.Telemetry.html#metrics/0"},{"type":"function","title":"DatumWeb.Telemetry.start_link/1","doc":"","ref":"DatumWeb.Telemetry.html#start_link/1"},{"type":"module","title":"DatumWeb.UserAuth","doc":"This module contains mostly user authentication middleware needed by various routes","ref":"DatumWeb.UserAuth.html"},{"type":"function","title":"DatumWeb.UserAuth.fetch_current_user/2","doc":"Authenticates the user by looking into the session\nand remember me token.","ref":"DatumWeb.UserAuth.html#fetch_current_user/2"},{"type":"function","title":"DatumWeb.UserAuth.log_in_user/3","doc":"Logs the user in.\n\nIt renews the session ID and clears the whole session\nto avoid fixation attacks. See the renew_session\nfunction to customize this behaviour.\n\nIt also sets a `:live_socket_id` key in the session,\nso LiveView sessions are identified and automatically\ndisconnected on log out. The line can be safely removed\nif you are not using LiveView.","ref":"DatumWeb.UserAuth.html#log_in_user/3"},{"type":"function","title":"DatumWeb.UserAuth.log_out_user/1","doc":"Logs the user out.\n\nIt clears all session data for safety. See renew_session.","ref":"DatumWeb.UserAuth.html#log_out_user/1"},{"type":"function","title":"DatumWeb.UserAuth.on_mount/4","doc":"Handles mounting and authenticating the current_user in LiveViews.\n\n## `on_mount` arguments\n\n  * `:mount_current_user` - Assigns current_user\n    to socket assigns based on user_token, or nil if\n    there's no user_token or no matching user.\n\n  * `:ensure_authenticated` - Authenticates the user from the session,\n    and assigns the current_user to socket assigns based\n    on user_token.\n    Redirects to login page if there's no logged user.\n\n  * `:redirect_if_user_is_authenticated` - Authenticates the user from the session.\n    Redirects to signed_in_path if there's a logged user.","ref":"DatumWeb.UserAuth.html#on_mount/4"},{"type":"function","title":"Examples - DatumWeb.UserAuth.on_mount/4","doc":"Use the `on_mount` lifecycle macro in LiveViews to mount or authenticate\nthe current_user:\n\n    defmodule DatumWeb.PageLive do\n      use DatumWeb, :live_view\n\n      on_mount {DatumWeb.UserAuth, :mount_current_user}\n      ...\n    end\n\nOr use the `live_session` of your router to invoke the on_mount callback:\n\n    live_session :authenticated, on_mount: [{DatumWeb.UserAuth, :ensure_authenticated}] do\n      live \"/profile\", ProfileLive, :index\n    end","ref":"DatumWeb.UserAuth.html#on_mount/4-examples"},{"type":"function","title":"DatumWeb.UserAuth.redirect_if_user_is_authenticated/2","doc":"Used for routes that require the user to not be authenticated.","ref":"DatumWeb.UserAuth.html#redirect_if_user_is_authenticated/2"},{"type":"function","title":"DatumWeb.UserAuth.require_authenticated_token/2","doc":"","ref":"DatumWeb.UserAuth.html#require_authenticated_token/2"},{"type":"function","title":"DatumWeb.UserAuth.require_authenticated_user/2","doc":"Used for routes that require the user to be authenticated.\n\nIf you want to enforce the user email is confirmed before\nthey use the application at all, here would be a good place.","ref":"DatumWeb.UserAuth.html#require_authenticated_user/2"},{"type":"module","title":"DatumWeb.UserConfirmationInstructionsLive","doc":"","ref":"DatumWeb.UserConfirmationInstructionsLive.html"},{"type":"function","title":"DatumWeb.UserConfirmationInstructionsLive.handle_event/3","doc":"","ref":"DatumWeb.UserConfirmationInstructionsLive.html#handle_event/3"},{"type":"function","title":"DatumWeb.UserConfirmationInstructionsLive.mount/3","doc":"","ref":"DatumWeb.UserConfirmationInstructionsLive.html#mount/3"},{"type":"function","title":"DatumWeb.UserConfirmationInstructionsLive.render/1","doc":"","ref":"DatumWeb.UserConfirmationInstructionsLive.html#render/1"},{"type":"module","title":"DatumWeb.UserConfirmationLive","doc":"","ref":"DatumWeb.UserConfirmationLive.html"},{"type":"function","title":"DatumWeb.UserConfirmationLive.handle_event/3","doc":"","ref":"DatumWeb.UserConfirmationLive.html#handle_event/3"},{"type":"function","title":"DatumWeb.UserConfirmationLive.mount/3","doc":"","ref":"DatumWeb.UserConfirmationLive.html#mount/3"},{"type":"function","title":"DatumWeb.UserConfirmationLive.render/1","doc":"","ref":"DatumWeb.UserConfirmationLive.html#render/1"},{"type":"module","title":"DatumWeb.UserForgotPasswordLive","doc":"","ref":"DatumWeb.UserForgotPasswordLive.html"},{"type":"function","title":"DatumWeb.UserForgotPasswordLive.handle_event/3","doc":"","ref":"DatumWeb.UserForgotPasswordLive.html#handle_event/3"},{"type":"function","title":"DatumWeb.UserForgotPasswordLive.mount/3","doc":"","ref":"DatumWeb.UserForgotPasswordLive.html#mount/3"},{"type":"function","title":"DatumWeb.UserForgotPasswordLive.render/1","doc":"","ref":"DatumWeb.UserForgotPasswordLive.html#render/1"},{"type":"module","title":"DatumWeb.UserLoginLive","doc":"","ref":"DatumWeb.UserLoginLive.html"},{"type":"function","title":"DatumWeb.UserLoginLive.mount/3","doc":"","ref":"DatumWeb.UserLoginLive.html#mount/3"},{"type":"function","title":"DatumWeb.UserLoginLive.render/1","doc":"","ref":"DatumWeb.UserLoginLive.html#render/1"},{"type":"module","title":"DatumWeb.UserRegistrationLive","doc":"","ref":"DatumWeb.UserRegistrationLive.html"},{"type":"function","title":"DatumWeb.UserRegistrationLive.handle_event/3","doc":"","ref":"DatumWeb.UserRegistrationLive.html#handle_event/3"},{"type":"function","title":"DatumWeb.UserRegistrationLive.mount/3","doc":"","ref":"DatumWeb.UserRegistrationLive.html#mount/3"},{"type":"function","title":"DatumWeb.UserRegistrationLive.render/1","doc":"","ref":"DatumWeb.UserRegistrationLive.html#render/1"},{"type":"module","title":"DatumWeb.UserResetPasswordLive","doc":"","ref":"DatumWeb.UserResetPasswordLive.html"},{"type":"function","title":"DatumWeb.UserResetPasswordLive.handle_event/3","doc":"","ref":"DatumWeb.UserResetPasswordLive.html#handle_event/3"},{"type":"function","title":"DatumWeb.UserResetPasswordLive.mount/3","doc":"","ref":"DatumWeb.UserResetPasswordLive.html#mount/3"},{"type":"function","title":"DatumWeb.UserResetPasswordLive.render/1","doc":"","ref":"DatumWeb.UserResetPasswordLive.html#render/1"},{"type":"module","title":"DatumWeb.UserSessionController","doc":"","ref":"DatumWeb.UserSessionController.html"},{"type":"function","title":"DatumWeb.UserSessionController.create/2","doc":"","ref":"DatumWeb.UserSessionController.html#create/2"},{"type":"function","title":"DatumWeb.UserSessionController.delete/2","doc":"","ref":"DatumWeb.UserSessionController.html#delete/2"},{"type":"function","title":"DatumWeb.UserSessionController.user_details/2","doc":"","ref":"DatumWeb.UserSessionController.html#user_details/2"},{"type":"module","title":"DatumWeb.UserSettingsLive","doc":"","ref":"DatumWeb.UserSettingsLive.html"},{"type":"function","title":"DatumWeb.UserSettingsLive.handle_event/3","doc":"","ref":"DatumWeb.UserSettingsLive.html#handle_event/3"},{"type":"function","title":"DatumWeb.UserSettingsLive.mount/3","doc":"","ref":"DatumWeb.UserSettingsLive.html#mount/3"},{"type":"function","title":"DatumWeb.UserSettingsLive.render/1","doc":"","ref":"DatumWeb.UserSettingsLive.html#render/1"},{"type":"module","title":"DatumWeb.WikiLive","doc":"This is the live view for rendering the internal Wiki. The wiki lives in /priv/wiki.\nThe wiki requires a `home.md` and `table_of_contents.md` to function correctly. Pages\nare rendered by treating the url after `wiki/` as a param representing the wiki pages\nfile name. So in order to work, you must have a wiki page who's file name is URL formatted.","ref":"DatumWeb.WikiLive.html"},{"type":"task","title":"mix database.clean","doc":"Cleans the local database files.","ref":"Mix.Tasks.Database.Clean.html"},{"type":"task","title":"mix wiki.gen","doc":"Generates a new wiki page and adds to the table of contents. Name should be\nthe full, captilized name of the post - e.g Table of Contents","ref":"Mix.Tasks.Wiki.Gen.html"},{"type":"extras","title":"DeepLynx Elixir Setup","doc":"# DeepLynx Elixir Setup","ref":"readme.html"},{"type":"extras","title":"Requirements - DeepLynx Elixir Setup","doc":"- Elixir 1.17-otp-27 \n    - Mac: run `brew install elixir`\n    - Windows: Use the appropriate installer found [here](https://elixir-lang.org/install.html#windows). If installing via exe, choose the `Elixir 1.17.3 on Erlang 27` option\n- Erlang 27.0 (should come with Elixir installation)\n- [Node.js and NPM](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm): used for UI libraries\n- Mix (should come with Elixir installation installed)\n- **optional**: [asdf](https://asdf-vm.com/guide/getting-started.html): version manager for Elixir, not available on Windows","ref":"readme.html#requirements"},{"type":"extras","title":"VSCode Extensions - DeepLynx Elixir Setup","doc":"Visual Studio Code with a few extensions is primarily recommended as the editor of choice for Elixir/Phoenix. Extensions are available through the extensions tab on the left column of VS Code and typed into the search bar. These extensions help with linting and coding hints to ease the development experience. **Note**: Users of IntelliJ should be aware that there is no support for Phx HEEx templates and that it is recommended to use VSC or at least Zed or Neovim instead. \n\n- Credo: a static code analysis tool providing code annotations which include best practices and warnings or errors before being compiled to the BEAM. The main extension is by pantajoe. ![alt text](assets/README/credo.png)\n- Lexical: the base for the new language server that the Elixir team is funding. ![alt text](assets/README/lexical.png)\n- Phoenix Framework extension: recommended for the web application. ![alt text](assets/README/phx.png)","ref":"readme.html#vscode-extensions"},{"type":"extras","title":"Working Under Enterprise CA (Dealing with Cert Errors) - DeepLynx Elixir Setup","doc":"You will need to add a file for rebar3. If it does not already exist, create the directory ~/.config/rebar3. Then create the file `rebar.config` with the following text modified for the path to your cert. \n\n`{ssl_cacerts_path, [\"/path/to/YOUR_COMPANY_CERT\"]}.`","ref":"readme.html#working-under-enterprise-ca-dealing-with-cert-errors"},{"type":"extras","title":"Modifying Environment Variables - DeepLynx Elixir Setup","doc":"Hex uses an environment variable called `HEX_CACERTS_PATH` set to your certificate bundle. This will resemble the following: \n```sh\nexport HEX_CACERTS_PATH=/path/to/YOUR_COMPANY_CERT.crt\n```\nand be added to a .bash_profile or preferred environment variable configuration. Failure to do this will result in an SSL error.\n\nAfter adding this variable to your profile, be sure to either close and reopen your terminal, or run `source ~/.bash_profile` (replacing bash_profile with your preferred env config file) to load the environment variable into your current terminal.","ref":"readme.html#modifying-environment-variables"},{"type":"extras","title":"Modifying `mix.esx` - DeepLynx Elixir Setup","doc":"Uncomment the top line in the `mix.exs` file and change the path to reflect the path to your cert. ![alt text](assets/README/mixexs.png)","ref":"readme.html#modifying-mix-esx"},{"type":"extras","title":"Modifying `config/config.exs` - DeepLynx Elixir Setup","doc":"You also need to modify the configuration file in `config/config.exs`, adding `cacerts_path: \"/path/to/YOUR_COMPANY_CERT\"` to the following lines like so: ![alt text](assets/README/configexs.png)","ref":"readme.html#modifying-config-config-exs"},{"type":"extras","title":"Server Initialization - DeepLynx Elixir Setup","doc":"1. To run the application, you must first get and compile the dependencies - `mix deps.get && mix deps.compile`.\n2. Run `mix setup` this will remove any old databases and rebuild the Operations Sqlite3 database, as well as run its migrations, should cover everything else like fetching sqlite3 and required plugins\n    1. You may have to run `brew install coreutils` on Mac if you encounter the following error: `sha256sum: command not found; Checksum fail!`","ref":"readme.html#server-initialization"},{"type":"extras","title":"Running the CLI - DeepLynx Elixir Setup","doc":"1. Scripts are provided in the `rel` folder for running the various CLI functions. These are bundled into the final release and used as either bash or windows batch scripts to run the relevant command.","ref":"readme.html#running-the-cli"},{"type":"extras","title":"Running the webserver - DeepLynx Elixir Setup","doc":"1. To run the webserver, use the command `mix phx.server`. this should now just....work - no further configuration should be necessary, but be sure to at least peruse `config/dev.exs` which contains relative configuration settings.\n2. You will be greeted by a login screen. Instead of registering a new user, for local development it is recommended to use the default admin account:\n    - username: `admin@admin.com`\n    - password: `xxxxxxxxxxxx` (12 x's)","ref":"readme.html#running-the-webserver"},{"type":"extras","title":"Running the tests - DeepLynx Elixir Setup","doc":"To run tests, use the command `mix test`. If all have run correctly, you should see something like the following at the bottom of your terminal:\n```\nFinished in 1.9 seconds (0.00s async, 1.9s sync)\n172 tests, 0 failures\n```","ref":"readme.html#running-the-tests"},{"type":"extras","title":"The File Structure - DeepLynx Elixir Setup","doc":"The majority of development will be done in the lib folder with tests written in the aptly named test folder. Within lib, the datum_web folder is where the front-end views as well as their respective controller code reside, in addition to the front end router. The regular datum folder holds backend models and typically hosts business logic and business domain as well as DB interactions.","ref":"readme.html#the-file-structure"},{"type":"extras","title":"Useful Links - DeepLynx Elixir Setup","doc":"","ref":"readme.html#useful-links"},{"type":"extras","title":"Documentation - DeepLynx Elixir Setup","doc":"- [Elixir Docs](https://hexdocs.pm/elixir/1.17.3/Kernel.html)\n- [Mix Docs](https://hexdocs.pm/mix/1.17.3/Mix.html)\n- [Phoenix Docs](https://hexdocs.pm/phoenix/Phoenix.html)\n- [LiveView Docs](https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html)\n- [Flame Docs](https://hexdocs.pm/flame/FLAME.html)","ref":"readme.html#documentation"},{"type":"extras","title":"Guides & Training - DeepLynx Elixir Setup","doc":"- [Elixir Learning](https://elixir-lang.org/learning.html)\n- [Exercism Track](https://exercism.org/tracks/elixir)\n- [Elixir Koans](https://github.com/elixirkoans/elixir-koans)\n- [Pattern Matching in Elixir](https://hexdocs.pm/elixir/pattern-matching.html)\n- [Strong arrows blog post: Elixir's path to a type system](https://elixir-lang.org/blog/2023/09/20/strong-arrows-gradual-typing/)","ref":"readme.html#guides-training"}],"proglang":"elixir","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.36.1"}}